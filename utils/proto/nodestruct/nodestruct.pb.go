// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: nodestruct.proto

package nodestruct

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 资源类型
type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_DEFAULT ResourceType = 0
	ResourceType_RESOURCE_TYPE_MUSIC   ResourceType = 1 // 音频
	ResourceType_RESOURCE_TYPE_VIDEO   ResourceType = 2 // 视频
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0: "RESOURCE_TYPE_DEFAULT",
		1: "RESOURCE_TYPE_MUSIC",
		2: "RESOURCE_TYPE_VIDEO",
	}
	ResourceType_value = map[string]int32{
		"RESOURCE_TYPE_DEFAULT": 0,
		"RESOURCE_TYPE_MUSIC":   1,
		"RESOURCE_TYPE_VIDEO":   2,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_nodestruct_proto_enumTypes[0].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_nodestruct_proto_enumTypes[0]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{0}
}

// 测试字段
type Test int32

const (
	Test_TEST_DEFAULT Test = 0
	Test_TEST_T       Test = 1 // 你好
)

// Enum value maps for Test.
var (
	Test_name = map[int32]string{
		0: "TEST_DEFAULT",
		1: "TEST_T",
	}
	Test_value = map[string]int32{
		"TEST_DEFAULT": 0,
		"TEST_T":       1,
	}
)

func (x Test) Enum() *Test {
	p := new(Test)
	*p = x
	return p
}

func (x Test) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Test) Descriptor() protoreflect.EnumDescriptor {
	return file_nodestruct_proto_enumTypes[1].Descriptor()
}

func (Test) Type() protoreflect.EnumType {
	return &file_nodestruct_proto_enumTypes[1]
}

func (x Test) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Test.Descriptor instead.
func (Test) EnumDescriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{1}
}

type MessageId int32

const (
	MessageId_MSG_SCENE                      MessageId = 0
	MessageId_MSG_VECTOR                     MessageId = 1
	MessageId_MSG_TEST_NODE                  MessageId = 2
	MessageId_MSG_MODEL_MODULE               MessageId = 3
	MessageId_MSG_RESOURCE                   MessageId = 4
	MessageId_MSG_RESOURCE_FILE_INFO_EXTEND0 MessageId = 5
	MessageId_MSG_RESOURCE_FILE_INFO_EXTEND1 MessageId = 6
	MessageId_MSG_TRANSFORM                  MessageId = 7
	MessageId_MSG_FILE_INFO                  MessageId = 8
	MessageId_MSG_FILE_INFO_EXTEND0          MessageId = 9
	MessageId_MSG_FILE_INFO_EXTEND1          MessageId = 10
	MessageId_MSG_TRANSFORM_INFO             MessageId = 11
)

// Enum value maps for MessageId.
var (
	MessageId_name = map[int32]string{
		0:  "MSG_SCENE",
		1:  "MSG_VECTOR",
		2:  "MSG_TEST_NODE",
		3:  "MSG_MODEL_MODULE",
		4:  "MSG_RESOURCE",
		5:  "MSG_RESOURCE_FILE_INFO_EXTEND0",
		6:  "MSG_RESOURCE_FILE_INFO_EXTEND1",
		7:  "MSG_TRANSFORM",
		8:  "MSG_FILE_INFO",
		9:  "MSG_FILE_INFO_EXTEND0",
		10: "MSG_FILE_INFO_EXTEND1",
		11: "MSG_TRANSFORM_INFO",
	}
	MessageId_value = map[string]int32{
		"MSG_SCENE":                      0,
		"MSG_VECTOR":                     1,
		"MSG_TEST_NODE":                  2,
		"MSG_MODEL_MODULE":               3,
		"MSG_RESOURCE":                   4,
		"MSG_RESOURCE_FILE_INFO_EXTEND0": 5,
		"MSG_RESOURCE_FILE_INFO_EXTEND1": 6,
		"MSG_TRANSFORM":                  7,
		"MSG_FILE_INFO":                  8,
		"MSG_FILE_INFO_EXTEND0":          9,
		"MSG_FILE_INFO_EXTEND1":          10,
		"MSG_TRANSFORM_INFO":             11,
	}
)

func (x MessageId) Enum() *MessageId {
	p := new(MessageId)
	*p = x
	return p
}

func (x MessageId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageId) Descriptor() protoreflect.EnumDescriptor {
	return file_nodestruct_proto_enumTypes[2].Descriptor()
}

func (MessageId) Type() protoreflect.EnumType {
	return &file_nodestruct_proto_enumTypes[2]
}

func (x MessageId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageId.Descriptor instead.
func (MessageId) EnumDescriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{2}
}

// router
// 方法相关
type MethodId int32

const (
	MethodId_RESPONSE     MethodId = 0 // 消息返回
	MethodId_SCENE_INIT   MethodId = 1 // 场景初始化（无需params
	MethodId_SCENE_UPDATE MethodId = 2 // 场景数据更新
	MethodId_ARRAY_ADD    MethodId = 3 // 数组数据添加
	MethodId_MAP_ADD      MethodId = 4 // Map数据添加
	MethodId_ARRAY_INSERT MethodId = 5 // 数组插入或某项移动
	MethodId_ARRAY_DELETE MethodId = 6 // 数组删除
	MethodId_MAP_DELETE   MethodId = 7 //
)

// Enum value maps for MethodId.
var (
	MethodId_name = map[int32]string{
		0: "RESPONSE",
		1: "SCENE_INIT",
		2: "SCENE_UPDATE",
		3: "ARRAY_ADD",
		4: "MAP_ADD",
		5: "ARRAY_INSERT",
		6: "ARRAY_DELETE",
		7: "MAP_DELETE",
	}
	MethodId_value = map[string]int32{
		"RESPONSE":     0,
		"SCENE_INIT":   1,
		"SCENE_UPDATE": 2,
		"ARRAY_ADD":    3,
		"MAP_ADD":      4,
		"ARRAY_INSERT": 5,
		"ARRAY_DELETE": 6,
		"MAP_DELETE":   7,
	}
)

func (x MethodId) Enum() *MethodId {
	p := new(MethodId)
	*p = x
	return p
}

func (x MethodId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MethodId) Descriptor() protoreflect.EnumDescriptor {
	return file_nodestruct_proto_enumTypes[3].Descriptor()
}

func (MethodId) Type() protoreflect.EnumType {
	return &file_nodestruct_proto_enumTypes[3]
}

func (x MethodId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MethodId.Descriptor instead.
func (MethodId) EnumDescriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{3}
}

type CommonData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*CommonData_StringData
	//	*CommonData_Int32Data
	//	*CommonData_FloatData
	//	*CommonData_BytesData
	Data isCommonData_Data `protobuf_oneof:"data"`
}

func (x *CommonData) Reset() {
	*x = CommonData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonData) ProtoMessage() {}

func (x *CommonData) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonData.ProtoReflect.Descriptor instead.
func (*CommonData) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{0}
}

func (m *CommonData) GetData() isCommonData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *CommonData) GetStringData() string {
	if x, ok := x.GetData().(*CommonData_StringData); ok {
		return x.StringData
	}
	return ""
}

func (x *CommonData) GetInt32Data() int32 {
	if x, ok := x.GetData().(*CommonData_Int32Data); ok {
		return x.Int32Data
	}
	return 0
}

func (x *CommonData) GetFloatData() float32 {
	if x, ok := x.GetData().(*CommonData_FloatData); ok {
		return x.FloatData
	}
	return 0
}

func (x *CommonData) GetBytesData() []byte {
	if x, ok := x.GetData().(*CommonData_BytesData); ok {
		return x.BytesData
	}
	return nil
}

type isCommonData_Data interface {
	isCommonData_Data()
}

type CommonData_StringData struct {
	StringData string `protobuf:"bytes,1,opt,name=stringData,proto3,oneof"`
}

type CommonData_Int32Data struct {
	Int32Data int32 `protobuf:"varint,2,opt,name=int32Data,proto3,oneof"`
}

type CommonData_FloatData struct {
	FloatData float32 `protobuf:"fixed32,3,opt,name=floatData,proto3,oneof"`
}

type CommonData_BytesData struct {
	BytesData []byte `protobuf:"bytes,4,opt,name=bytesData,proto3,oneof"`
}

func (*CommonData_StringData) isCommonData_Data() {}

func (*CommonData_Int32Data) isCommonData_Data() {}

func (*CommonData_FloatData) isCommonData_Data() {}

func (*CommonData_BytesData) isCommonData_Data() {}

// 定义泛型结构体
type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId     MessageId              `protobuf:"varint,1,opt,name=msgId,proto3,enum=MessageId" json:"msgId,omitempty"` // 指向message option msgId
	Path      string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"` // 对于data的字段掩码
	Data      []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{1}
}

func (x *Payload) GetMsgId() MessageId {
	if x != nil {
		return x.MsgId
	}
	return MessageId_MSG_SCENE
}

func (x *Payload) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Payload) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *Payload) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Scene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeList map[int32]*Payload `protobuf:"bytes,1,rep,name=nodeList,proto3" json:"nodeList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // repeated Payload nodeList = 1;
}

func (x *Scene) Reset() {
	*x = Scene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scene) ProtoMessage() {}

func (x *Scene) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scene.ProtoReflect.Descriptor instead.
func (*Scene) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{2}
}

func (x *Scene) GetNodeList() map[int32]*Payload {
	if x != nil {
		return x.NodeList
	}
	return nil
}

type Vector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Vector) Reset() {
	*x = Vector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{3}
}

func (x *Vector) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Vector) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type TestNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource      *Resource      `protobuf:"bytes,1,opt,name=Resource,proto3" json:"Resource,omitempty"`
	TransformInfo *TransformInfo `protobuf:"bytes,2,opt,name=TransformInfo,proto3" json:"TransformInfo,omitempty"`
	Vector        *Vector        `protobuf:"bytes,3,opt,name=Vector,proto3" json:"Vector,omitempty"`
}

func (x *TestNode) Reset() {
	*x = TestNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestNode) ProtoMessage() {}

func (x *TestNode) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestNode.ProtoReflect.Descriptor instead.
func (*TestNode) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{4}
}

func (x *TestNode) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *TestNode) GetTransformInfo() *TransformInfo {
	if x != nil {
		return x.TransformInfo
	}
	return nil
}

func (x *TestNode) GetVector() *Vector {
	if x != nil {
		return x.Vector
	}
	return nil
}

type ModelModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransformInfo *TransformInfo `protobuf:"bytes,1,opt,name=TransformInfo,proto3" json:"TransformInfo,omitempty"`
}

func (x *ModelModule) Reset() {
	*x = ModelModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelModule) ProtoMessage() {}

func (x *ModelModule) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelModule.ProtoReflect.Descriptor instead.
func (*ModelModule) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{5}
}

func (x *ModelModule) GetTransformInfo() *TransformInfo {
	if x != nil {
		return x.TransformInfo
	}
	return nil
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileInfo *FileInfo `protobuf:"bytes,1,opt,name=FileInfo,proto3" json:"FileInfo,omitempty"`
	Visible  bool      `protobuf:"varint,2,opt,name=visible,proto3" json:"visible,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{6}
}

func (x *Resource) GetFileInfo() *FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *Resource) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

type ResourceFileInfoExtend0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed string `protobuf:"bytes,1,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *ResourceFileInfoExtend0) Reset() {
	*x = ResourceFileInfoExtend0{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceFileInfoExtend0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceFileInfoExtend0) ProtoMessage() {}

func (x *ResourceFileInfoExtend0) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceFileInfoExtend0.ProtoReflect.Descriptor instead.
func (*ResourceFileInfoExtend0) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{7}
}

func (x *ResourceFileInfoExtend0) GetSpeed() string {
	if x != nil {
		return x.Speed
	}
	return ""
}

type ResourceFileInfoExtend1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransformInfo *TransformInfo `protobuf:"bytes,1,opt,name=TransformInfo,proto3" json:"TransformInfo,omitempty"`
}

func (x *ResourceFileInfoExtend1) Reset() {
	*x = ResourceFileInfoExtend1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceFileInfoExtend1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceFileInfoExtend1) ProtoMessage() {}

func (x *ResourceFileInfoExtend1) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceFileInfoExtend1.ProtoReflect.Descriptor instead.
func (*ResourceFileInfoExtend1) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{8}
}

func (x *ResourceFileInfoExtend1) GetTransformInfo() *TransformInfo {
	if x != nil {
		return x.TransformInfo
	}
	return nil
}

type Transform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position string `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *Transform) Reset() {
	*x = Transform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transform) ProtoMessage() {}

func (x *Transform) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transform.ProtoReflect.Descriptor instead.
func (*Transform) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{9}
}

func (x *Transform) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid         string       `protobuf:"bytes,1,opt,name=Fid,proto3" json:"Fid,omitempty"`
	FullPath    string       `protobuf:"bytes,2,opt,name=FullPath,proto3" json:"FullPath,omitempty"`
	ContentType ResourceType `protobuf:"varint,3,opt,name=ContentType,proto3,enum=ResourceType" json:"ContentType,omitempty"`
	Extend      *Payload     `protobuf:"bytes,5,opt,name=extend,proto3" json:"extend,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{10}
}

func (x *FileInfo) GetFid() string {
	if x != nil {
		return x.Fid
	}
	return ""
}

func (x *FileInfo) GetFullPath() string {
	if x != nil {
		return x.FullPath
	}
	return ""
}

func (x *FileInfo) GetContentType() ResourceType {
	if x != nil {
		return x.ContentType
	}
	return ResourceType_RESOURCE_TYPE_DEFAULT
}

func (x *FileInfo) GetExtend() *Payload {
	if x != nil {
		return x.Extend
	}
	return nil
}

type FileInfoExtend0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed     string     `protobuf:"bytes,1,opt,name=speed,proto3" json:"speed,omitempty"`
	Transform *Transform `protobuf:"bytes,2,opt,name=Transform,proto3" json:"Transform,omitempty"`
}

func (x *FileInfoExtend0) Reset() {
	*x = FileInfoExtend0{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfoExtend0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoExtend0) ProtoMessage() {}

func (x *FileInfoExtend0) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoExtend0.ProtoReflect.Descriptor instead.
func (*FileInfoExtend0) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{11}
}

func (x *FileInfoExtend0) GetSpeed() string {
	if x != nil {
		return x.Speed
	}
	return ""
}

func (x *FileInfoExtend0) GetTransform() *Transform {
	if x != nil {
		return x.Transform
	}
	return nil
}

type FileInfoExtend1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	T321 string `protobuf:"bytes,1,opt,name=t321,proto3" json:"t321,omitempty"`
}

func (x *FileInfoExtend1) Reset() {
	*x = FileInfoExtend1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfoExtend1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoExtend1) ProtoMessage() {}

func (x *FileInfoExtend1) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoExtend1.ProtoReflect.Descriptor instead.
func (*FileInfoExtend1) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{12}
}

func (x *FileInfoExtend1) GetT321() string {
	if x != nil {
		return x.T321
	}
	return ""
}

type TransformInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *Vector `protobuf:"bytes,1,opt,name=Location,proto3" json:"Location,omitempty"`
	Rotator  *Vector `protobuf:"bytes,2,opt,name=Rotator,proto3" json:"Rotator,omitempty"`
	Scale    *Vector `protobuf:"bytes,3,opt,name=Scale,proto3" json:"Scale,omitempty"`
}

func (x *TransformInfo) Reset() {
	*x = TransformInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransformInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformInfo) ProtoMessage() {}

func (x *TransformInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformInfo.ProtoReflect.Descriptor instead.
func (*TransformInfo) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{13}
}

func (x *TransformInfo) GetLocation() *Vector {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *TransformInfo) GetRotator() *Vector {
	if x != nil {
		return x.Rotator
	}
	return nil
}

func (x *TransformInfo) GetScale() *Vector {
	if x != nil {
		return x.Scale
	}
	return nil
}

type ResponseParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ResponseParams) Reset() {
	*x = ResponseParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseParams) ProtoMessage() {}

func (x *ResponseParams) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseParams.ProtoReflect.Descriptor instead.
func (*ResponseParams) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{14}
}

func (x *ResponseParams) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseParams) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ArrayInsertParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From int32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"` // 下标 如果是move则填-1
	To   int32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`     // 下标
}

func (x *ArrayInsertParams) Reset() {
	*x = ArrayInsertParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayInsertParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayInsertParams) ProtoMessage() {}

func (x *ArrayInsertParams) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayInsertParams.ProtoReflect.Descriptor instead.
func (*ArrayInsertParams) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{15}
}

func (x *ArrayInsertParams) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *ArrayInsertParams) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

type ArrayDeleteParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indexs []int32 `protobuf:"varint,1,rep,packed,name=indexs,proto3" json:"indexs,omitempty"` // 下标组
}

func (x *ArrayDeleteParams) Reset() {
	*x = ArrayDeleteParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayDeleteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayDeleteParams) ProtoMessage() {}

func (x *ArrayDeleteParams) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayDeleteParams.ProtoReflect.Descriptor instead.
func (*ArrayDeleteParams) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{16}
}

func (x *ArrayDeleteParams) GetIndexs() []int32 {
	if x != nil {
		return x.Indexs
	}
	return nil
}

type WsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniquenessId int32    `protobuf:"varint,1,opt,name=uniquenessId,proto3" json:"uniquenessId,omitempty"`       // 消息实例Id,由客户端自增
	MethodId     MethodId `protobuf:"varint,2,opt,name=methodId,proto3,enum=MethodId" json:"methodId,omitempty"` // 方法Id
	// Types that are assignable to Params:
	//	*WsData_ResponseParams
	//	*WsData_ArrayInsertParams
	//	*WsData_ArrayDeleteParams
	Params isWsData_Params `protobuf_oneof:"params"`
	Data   *Payload        `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // 具体内容
}

func (x *WsData) Reset() {
	*x = WsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodestruct_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WsData) ProtoMessage() {}

func (x *WsData) ProtoReflect() protoreflect.Message {
	mi := &file_nodestruct_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WsData.ProtoReflect.Descriptor instead.
func (*WsData) Descriptor() ([]byte, []int) {
	return file_nodestruct_proto_rawDescGZIP(), []int{17}
}

func (x *WsData) GetUniquenessId() int32 {
	if x != nil {
		return x.UniquenessId
	}
	return 0
}

func (x *WsData) GetMethodId() MethodId {
	if x != nil {
		return x.MethodId
	}
	return MethodId_RESPONSE
}

func (m *WsData) GetParams() isWsData_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (x *WsData) GetResponseParams() *ResponseParams {
	if x, ok := x.GetParams().(*WsData_ResponseParams); ok {
		return x.ResponseParams
	}
	return nil
}

func (x *WsData) GetArrayInsertParams() *ArrayInsertParams {
	if x, ok := x.GetParams().(*WsData_ArrayInsertParams); ok {
		return x.ArrayInsertParams
	}
	return nil
}

func (x *WsData) GetArrayDeleteParams() *ArrayDeleteParams {
	if x, ok := x.GetParams().(*WsData_ArrayDeleteParams); ok {
		return x.ArrayDeleteParams
	}
	return nil
}

func (x *WsData) GetData() *Payload {
	if x != nil {
		return x.Data
	}
	return nil
}

type isWsData_Params interface {
	isWsData_Params()
}

type WsData_ResponseParams struct {
	ResponseParams *ResponseParams `protobuf:"bytes,100,opt,name=responseParams,proto3,oneof"`
}

type WsData_ArrayInsertParams struct {
	ArrayInsertParams *ArrayInsertParams `protobuf:"bytes,101,opt,name=arrayInsertParams,proto3,oneof"`
}

type WsData_ArrayDeleteParams struct {
	ArrayDeleteParams *ArrayDeleteParams `protobuf:"bytes,102,opt,name=arrayDeleteParams,proto3,oneof"`
}

func (*WsData_ResponseParams) isWsData_Params() {}

func (*WsData_ArrayInsertParams) isWsData_Params() {}

func (*WsData_ArrayDeleteParams) isWsData_Params() {}

var file_nodestruct_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageId)(nil),
		Field:         50000,
		Name:          "msgId",
		Tag:           "varint,50000,opt,name=msgId,enum=MessageId",
		Filename:      "nodestruct.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         50001,
		Name:          "condition",
		Tag:           "bytes,50001,rep,name=condition",
		Filename:      "nodestruct.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional MessageId msgId = 50000;
	E_MsgId = &file_nodestruct_proto_extTypes[0]
	// repeated string condition = 50001;
	E_Condition = &file_nodestruct_proto_extTypes[1]
)

var File_nodestruct_proto protoreflect.FileDescriptor

var file_nodestruct_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x09, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x8d, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x6d,
	0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x86, 0x01, 0x0a, 0x05, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x45, 0x0a, 0x0d, 0x4e,
	0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x3a, 0x04, 0x80, 0xb5, 0x18, 0x00, 0x22, 0x38, 0x0a, 0x06, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c,
	0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x7a, 0x3a, 0x04, 0x80, 0xb5,
	0x18, 0x01, 0x22, 0x8e, 0x01, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x25, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x06,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x3a, 0x04, 0x80,
	0xb5, 0x18, 0x02, 0x22, 0x49, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x3a, 0x04, 0x80, 0xb5, 0x18, 0x03, 0x22, 0x51,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x3a, 0x04, 0x80, 0xb5, 0x18,
	0x04, 0x22, 0x5c, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x30, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x3a, 0x2b, 0x80, 0xb5, 0x18, 0x05, 0x8a, 0xb5, 0x18, 0x23, 0x5b, 0x7b, 0x22, 0x6b,
	0x65, 0x79, 0x22, 0x3a, 0x22, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x2c, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x22, 0x31, 0x22, 0x7d, 0x5d, 0x22,
	0x7c, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x31, 0x12, 0x34, 0x0a, 0x0d, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x3a, 0x2b, 0x80, 0xb5, 0x18, 0x06, 0x8a, 0xb5, 0x18, 0x23, 0x5b, 0x7b, 0x22, 0x6b, 0x65, 0x79,
	0x22, 0x3a, 0x22, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2c,
	0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x22, 0x32, 0x22, 0x7d, 0x5d, 0x22, 0x2d, 0x0a,
	0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x04, 0x80, 0xb5, 0x18, 0x07, 0x22, 0x91, 0x01, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x46, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46,
	0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2f, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x3a, 0x04, 0x80, 0xb5, 0x18, 0x08,
	0x22, 0x7e, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x30, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x3a, 0x2b, 0x80, 0xb5, 0x18, 0x09, 0x8a, 0xb5, 0x18, 0x23, 0x5b, 0x7b, 0x22,
	0x6b, 0x65, 0x79, 0x22, 0x3a, 0x22, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x2c, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x22, 0x31, 0x22, 0x7d, 0x5d,
	0x22, 0x52, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x33, 0x32, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x33, 0x32, 0x31, 0x3a, 0x2b, 0x80, 0xb5, 0x18, 0x0a, 0x8a, 0xb5, 0x18,
	0x23, 0x5b, 0x7b, 0x22, 0x6b, 0x65, 0x79, 0x22, 0x3a, 0x22, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2c, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x22,
	0x30, 0x22, 0x7d, 0x5d, 0x22, 0x7c, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x07, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a,
	0x05, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x3a, 0x04, 0x80, 0xb5,
	0x18, 0x0b, 0x22, 0x3e, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x37, 0x0a, 0x11, 0x41, 0x72, 0x72, 0x61, 0x79, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x11, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x73, 0x22, 0xbe, 0x02, 0x0a, 0x06, 0x57, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x49, 0x64, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x39,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x42, 0x0a, 0x11, 0x61, 0x72, 0x72,
	0x61, 0x79, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x11, 0x61, 0x72, 0x72, 0x61,
	0x79, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x42, 0x0a,
	0x11, 0x61, 0x72, 0x72, 0x61, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x11,
	0x61, 0x72, 0x72, 0x61, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42,
	0x08, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2a, 0x5b, 0x0a, 0x0c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55,
	0x4c, 0x54, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x17, 0x0a,
	0x13, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56,
	0x49, 0x44, 0x45, 0x4f, 0x10, 0x02, 0x2a, 0x24, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x0c, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x10, 0x01, 0x2a, 0xa1, 0x02, 0x0a,
	0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x53,
	0x47, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x53, 0x47,
	0x5f, 0x56, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x53, 0x47,
	0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10,
	0x4d, 0x53, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45,
	0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x53, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e, 0x4d, 0x53, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x45,
	0x58, 0x54, 0x45, 0x4e, 0x44, 0x30, 0x10, 0x05, 0x12, 0x22, 0x0a, 0x1e, 0x4d, 0x53, 0x47, 0x5f,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x44, 0x31, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d,
	0x4d, 0x53, 0x47, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x07, 0x12,
	0x11, 0x0a, 0x0d, 0x4d, 0x53, 0x47, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x10, 0x08, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x53, 0x47, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x44, 0x30, 0x10, 0x09, 0x12, 0x19, 0x0a,
	0x15, 0x4d, 0x53, 0x47, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x45,
	0x58, 0x54, 0x45, 0x4e, 0x44, 0x31, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x53, 0x47, 0x5f,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x0b,
	0x2a, 0x8a, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07,
	0x4d, 0x41, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x52, 0x52,
	0x41, 0x59, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x41,
	0x52, 0x52, 0x41, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x06, 0x12, 0x0e, 0x0a,
	0x0a, 0x4d, 0x41, 0x50, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x07, 0x3a, 0x46, 0x0a,
	0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x05, 0x6d, 0x73, 0x67,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x3f, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xd1, 0x86, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x1b, 0x5a, 0x19, 0x2e, 0x2e, 0x2f, 0x75, 0x74, 0x69,
	0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nodestruct_proto_rawDescOnce sync.Once
	file_nodestruct_proto_rawDescData = file_nodestruct_proto_rawDesc
)

func file_nodestruct_proto_rawDescGZIP() []byte {
	file_nodestruct_proto_rawDescOnce.Do(func() {
		file_nodestruct_proto_rawDescData = protoimpl.X.CompressGZIP(file_nodestruct_proto_rawDescData)
	})
	return file_nodestruct_proto_rawDescData
}

var file_nodestruct_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_nodestruct_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_nodestruct_proto_goTypes = []interface{}{
	(ResourceType)(0),                   // 0: ResourceType
	(Test)(0),                           // 1: Test
	(MessageId)(0),                      // 2: MessageId
	(MethodId)(0),                       // 3: MethodId
	(*CommonData)(nil),                  // 4: CommonData
	(*Payload)(nil),                     // 5: Payload
	(*Scene)(nil),                       // 6: Scene
	(*Vector)(nil),                      // 7: Vector
	(*TestNode)(nil),                    // 8: TestNode
	(*ModelModule)(nil),                 // 9: ModelModule
	(*Resource)(nil),                    // 10: Resource
	(*ResourceFileInfoExtend0)(nil),     // 11: ResourceFileInfoExtend0
	(*ResourceFileInfoExtend1)(nil),     // 12: ResourceFileInfoExtend1
	(*Transform)(nil),                   // 13: Transform
	(*FileInfo)(nil),                    // 14: FileInfo
	(*FileInfoExtend0)(nil),             // 15: FileInfoExtend0
	(*FileInfoExtend1)(nil),             // 16: FileInfoExtend1
	(*TransformInfo)(nil),               // 17: TransformInfo
	(*ResponseParams)(nil),              // 18: ResponseParams
	(*ArrayInsertParams)(nil),           // 19: ArrayInsertParams
	(*ArrayDeleteParams)(nil),           // 20: ArrayDeleteParams
	(*WsData)(nil),                      // 21: WsData
	nil,                                 // 22: Scene.NodeListEntry
	(*fieldmaskpb.FieldMask)(nil),       // 23: google.protobuf.FieldMask
	(*descriptorpb.MessageOptions)(nil), // 24: google.protobuf.MessageOptions
}
var file_nodestruct_proto_depIdxs = []int32{
	2,  // 0: Payload.msgId:type_name -> MessageId
	23, // 1: Payload.fieldMask:type_name -> google.protobuf.FieldMask
	22, // 2: Scene.nodeList:type_name -> Scene.NodeListEntry
	10, // 3: TestNode.Resource:type_name -> Resource
	17, // 4: TestNode.TransformInfo:type_name -> TransformInfo
	7,  // 5: TestNode.Vector:type_name -> Vector
	17, // 6: ModelModule.TransformInfo:type_name -> TransformInfo
	14, // 7: Resource.FileInfo:type_name -> FileInfo
	17, // 8: ResourceFileInfoExtend1.TransformInfo:type_name -> TransformInfo
	0,  // 9: FileInfo.ContentType:type_name -> ResourceType
	5,  // 10: FileInfo.extend:type_name -> Payload
	13, // 11: FileInfoExtend0.Transform:type_name -> Transform
	7,  // 12: TransformInfo.Location:type_name -> Vector
	7,  // 13: TransformInfo.Rotator:type_name -> Vector
	7,  // 14: TransformInfo.Scale:type_name -> Vector
	3,  // 15: WsData.methodId:type_name -> MethodId
	18, // 16: WsData.responseParams:type_name -> ResponseParams
	19, // 17: WsData.arrayInsertParams:type_name -> ArrayInsertParams
	20, // 18: WsData.arrayDeleteParams:type_name -> ArrayDeleteParams
	5,  // 19: WsData.data:type_name -> Payload
	5,  // 20: Scene.NodeListEntry.value:type_name -> Payload
	24, // 21: msgId:extendee -> google.protobuf.MessageOptions
	24, // 22: condition:extendee -> google.protobuf.MessageOptions
	2,  // 23: msgId:type_name -> MessageId
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	23, // [23:24] is the sub-list for extension type_name
	21, // [21:23] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_nodestruct_proto_init() }
func file_nodestruct_proto_init() {
	if File_nodestruct_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nodestruct_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceFileInfoExtend0); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceFileInfoExtend1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfoExtend0); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfoExtend1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransformInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayInsertParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayDeleteParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodestruct_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nodestruct_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CommonData_StringData)(nil),
		(*CommonData_Int32Data)(nil),
		(*CommonData_FloatData)(nil),
		(*CommonData_BytesData)(nil),
	}
	file_nodestruct_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*WsData_ResponseParams)(nil),
		(*WsData_ArrayInsertParams)(nil),
		(*WsData_ArrayDeleteParams)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nodestruct_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   19,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_nodestruct_proto_goTypes,
		DependencyIndexes: file_nodestruct_proto_depIdxs,
		EnumInfos:         file_nodestruct_proto_enumTypes,
		MessageInfos:      file_nodestruct_proto_msgTypes,
		ExtensionInfos:    file_nodestruct_proto_extTypes,
	}.Build()
	File_nodestruct_proto = out.File
	file_nodestruct_proto_rawDesc = nil
	file_nodestruct_proto_goTypes = nil
	file_nodestruct_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.1
// source: server.proto

package server

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UEType int32

const (
	UEType_StartServer     UEType = 0
	UEType_StartRoom       UEType = 1
	UEType_StartPak        UEType = 2
	UEType_StartVR         UEType = 3
	UEType_StartPlanet     UEType = 4
	UEType_ReStartStreamVR UEType = 5
)

// Enum value maps for UEType.
var (
	UEType_name = map[int32]string{
		0: "StartServer",
		1: "StartRoom",
		2: "StartPak",
		3: "StartVR",
		4: "StartPlanet",
		5: "ReStartStreamVR",
	}
	UEType_value = map[string]int32{
		"StartServer":     0,
		"StartRoom":       1,
		"StartPak":        2,
		"StartVR":         3,
		"StartPlanet":     4,
		"ReStartStreamVR": 5,
	}
)

func (x UEType) Enum() *UEType {
	p := new(UEType)
	*p = x
	return p
}

func (x UEType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UEType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[0].Descriptor()
}

func (UEType) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[0]
}

func (x UEType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UEType.Descriptor instead.
func (UEType) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

type ServerType int32

const (
	ServerType_ServerALL    ServerType = 0 //所有服务
	ServerType_ServerSync   ServerType = 1 //同步服
	ServerType_ServerRender ServerType = 2 //渲染服
	ServerType_ServerParse  ServerType = 3 //解析服
	ServerType_ServerProxy  ServerType = 4 //代理服
)

// Enum value maps for ServerType.
var (
	ServerType_name = map[int32]string{
		0: "ServerALL",
		1: "ServerSync",
		2: "ServerRender",
		3: "ServerParse",
		4: "ServerProxy",
	}
	ServerType_value = map[string]int32{
		"ServerALL":    0,
		"ServerSync":   1,
		"ServerRender": 2,
		"ServerParse":  3,
		"ServerProxy":  4,
	}
)

func (x ServerType) Enum() *ServerType {
	p := new(ServerType)
	*p = x
	return p
}

func (x ServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[1].Descriptor()
}

func (ServerType) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[1]
}

func (x ServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerType.Descriptor instead.
func (ServerType) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

type Method int32

const (
	Method_Method_Register            Method = 0
	Method_Method_GetUpdateFiles      Method = 1
	Method_Method_StartUE             Method = 2
	Method_Method_UpdateVersion       Method = 3
	Method_Method_GetVersionList      Method = 4
	Method_Method_VersionDownLoad     Method = 5
	Method_Method_GetVersionInfo      Method = 6
	Method_Method_GetLogFile          Method = 7
	Method_Method_Heart               Method = 8
	Method_Method_GetRenderServerInfo Method = 9
	Method_Method_UpdateServerInfo    Method = 10
)

// Enum value maps for Method.
var (
	Method_name = map[int32]string{
		0:  "Method_Register",
		1:  "Method_GetUpdateFiles",
		2:  "Method_StartUE",
		3:  "Method_UpdateVersion",
		4:  "Method_GetVersionList",
		5:  "Method_VersionDownLoad",
		6:  "Method_GetVersionInfo",
		7:  "Method_GetLogFile",
		8:  "Method_Heart",
		9:  "Method_GetRenderServerInfo",
		10: "Method_UpdateServerInfo",
	}
	Method_value = map[string]int32{
		"Method_Register":            0,
		"Method_GetUpdateFiles":      1,
		"Method_StartUE":             2,
		"Method_UpdateVersion":       3,
		"Method_GetVersionList":      4,
		"Method_VersionDownLoad":     5,
		"Method_GetVersionInfo":      6,
		"Method_GetLogFile":          7,
		"Method_Heart":               8,
		"Method_GetRenderServerInfo": 9,
		"Method_UpdateServerInfo":    10,
	}
)

func (x Method) Enum() *Method {
	p := new(Method)
	*p = x
	return p
}

func (x Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Method) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[2].Descriptor()
}

func (Method) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[2]
}

func (x Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Method.Descriptor instead.
func (Method) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

// 服务器信息
type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID      string   `protobuf:"bytes,1,opt,name=serverID,proto3" json:"serverID,omitempty"`
	ServerAddr    string   `protobuf:"bytes,2,opt,name=serverAddr,proto3" json:"serverAddr,omitempty"`
	ServerType    int32    `protobuf:"varint,3,opt,name=serverType,proto3" json:"serverType,omitempty"`
	Version       string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	State         int32    `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	UpdateVersion string   `protobuf:"bytes,6,opt,name=updateVersion,proto3" json:"updateVersion,omitempty"`
	Tags          []string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	CreateTime    string   `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime    string   `protobuf:"bytes,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

func (x *Server) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *Server) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *Server) GetServerType() int32 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *Server) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Server) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Server) GetUpdateVersion() string {
	if x != nil {
		return x.UpdateVersion
	}
	return ""
}

func (x *Server) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Server) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Server) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 用户信息
type ServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID      string `protobuf:"bytes,1,opt,name=serverID,proto3" json:"serverID,omitempty"`
	ServerAddr    string `protobuf:"bytes,2,opt,name=serverAddr,proto3" json:"serverAddr,omitempty"`
	ServerType    int32  `protobuf:"varint,3,opt,name=serverType,proto3" json:"serverType,omitempty"`
	Version       string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	State         int32  `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	UpdateVersion string `protobuf:"bytes,6,opt,name=updateVersion,proto3" json:"updateVersion,omitempty"`
	Device        string `protobuf:"bytes,7,opt,name=device,proto3" json:"device,omitempty"`
	CreateTime    string `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime    string `protobuf:"bytes,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	InstanceId    string `protobuf:"bytes,10,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	AgencyId      string `protobuf:"bytes,11,opt,name=agencyId,proto3" json:"agencyId,omitempty"`
	Region        string `protobuf:"bytes,12,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

func (x *ServerInfo) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *ServerInfo) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *ServerInfo) GetServerType() int32 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *ServerInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServerInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ServerInfo) GetUpdateVersion() string {
	if x != nil {
		return x.UpdateVersion
	}
	return ""
}

func (x *ServerInfo) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *ServerInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ServerInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ServerInfo) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ServerInfo) GetAgencyId() string {
	if x != nil {
		return x.AgencyId
	}
	return ""
}

func (x *ServerInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type ServerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerType int32 `protobuf:"varint,2,opt,name=serverType,proto3" json:"serverType,omitempty"` //0 所有 1房间服 2 解析服 3 业务服
}

func (x *ServerListRequest) Reset() {
	*x = ServerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerListRequest) ProtoMessage() {}

func (x *ServerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerListRequest.ProtoReflect.Descriptor instead.
func (*ServerListRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

func (x *ServerListRequest) GetServerType() int32 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

type ServerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"` //0 所有 1业务服 2房间服 3 解析服
	List    []*Server          `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Data    []*structpb.Struct `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ServerListResponse) Reset() {
	*x = ServerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerListResponse) ProtoMessage() {}

func (x *ServerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerListResponse.ProtoReflect.Descriptor instead.
func (*ServerListResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

func (x *ServerListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServerListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ServerListResponse) GetList() []*Server {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ServerListResponse) GetData() []*structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetServerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ServerType int32  `protobuf:"varint,2,opt,name=serverType,proto3" json:"serverType,omitempty"` //0 所有 1房间服 2 解析服 3 业务服
}

func (x *GetServerListRequest) Reset() {
	*x = GetServerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerListRequest) ProtoMessage() {}

func (x *GetServerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerListRequest.ProtoReflect.Descriptor instead.
func (*GetServerListRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

func (x *GetServerListRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetServerListRequest) GetServerType() int32 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

type GetServerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string        `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32         `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"` //0 所有 1业务服 2房间服 3 解析服
	List    []*ServerInfo `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetServerListResponse) Reset() {
	*x = GetServerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerListResponse) ProtoMessage() {}

func (x *GetServerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerListResponse.ProtoReflect.Descriptor instead.
func (*GetServerListResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5}
}

func (x *GetServerListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetServerListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetServerListResponse) GetList() []*ServerInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	FilePath   string   `protobuf:"bytes,2,opt,name=filePath,proto3" json:"filePath,omitempty"` //更新路径版本
	ServerID   string   `protobuf:"bytes,3,opt,name=serverID,proto3" json:"serverID,omitempty"`
	ServerIDs  []string `protobuf:"bytes,4,rep,name=serverIDs,proto3" json:"serverIDs,omitempty"`    //需要升级的服务器ID列表
	PakList    []string `protobuf:"bytes,5,rep,name=pakList,proto3" json:"pakList,omitempty"`        //更新组件包与基础包列表
	UpdateType int32    `protobuf:"varint,6,opt,name=updateType,proto3" json:"updateType,omitempty"` //更新类型:0-普通更新，1-强制更新，2-重新下载
}

func (x *UpdateServerRequest) Reset() {
	*x = UpdateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerRequest) ProtoMessage() {}

func (x *UpdateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateServerRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UpdateServerRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *UpdateServerRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *UpdateServerRequest) GetServerIDs() []string {
	if x != nil {
		return x.ServerIDs
	}
	return nil
}

func (x *UpdateServerRequest) GetPakList() []string {
	if x != nil {
		return x.PakList
	}
	return nil
}

func (x *UpdateServerRequest) GetUpdateType() int32 {
	if x != nil {
		return x.UpdateType
	}
	return 0
}

type UpdateServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateServerResponse) Reset() {
	*x = UpdateServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerResponse) ProtoMessage() {}

func (x *UpdateServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerResponse.ProtoReflect.Descriptor instead.
func (*UpdateServerResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateServerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetServerAddrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Area     string `protobuf:"bytes,3,opt,name=area,proto3" json:"area,omitempty"`
	Version  string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetServerAddrRequest) Reset() {
	*x = GetServerAddrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAddrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAddrRequest) ProtoMessage() {}

func (x *GetServerAddrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAddrRequest.ProtoReflect.Descriptor instead.
func (*GetServerAddrRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8}
}

func (x *GetServerAddrRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetServerAddrRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetServerAddrRequest) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *GetServerAddrRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetServerAddrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` //0 所有 1房间服 2 解析服 3 业务服
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ip      string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *GetServerAddrResponse) Reset() {
	*x = GetServerAddrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerAddrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerAddrResponse) ProtoMessage() {}

func (x *GetServerAddrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerAddrResponse.ProtoReflect.Descriptor instead.
func (*GetServerAddrResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{9}
}

func (x *GetServerAddrResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetServerAddrResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetServerAddrResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type StartVRRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceName string `protobuf:"bytes,1,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	Addr       string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *StartVRRequest) Reset() {
	*x = StartVRRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartVRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVRRequest) ProtoMessage() {}

func (x *StartVRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVRRequest.ProtoReflect.Descriptor instead.
func (*StartVRRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{10}
}

func (x *StartVRRequest) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *StartVRRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type StartVRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` //0 所有 1房间服 2 解析服 3 业务服
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ip      string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *StartVRResponse) Reset() {
	*x = StartVRResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartVRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVRResponse) ProtoMessage() {}

func (x *StartVRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVRResponse.ProtoReflect.Descriptor instead.
func (*StartVRResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{11}
}

func (x *StartVRResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StartVRResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StartVRResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type StartPlanetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *StartPlanetRequest) Reset() {
	*x = StartPlanetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPlanetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPlanetRequest) ProtoMessage() {}

func (x *StartPlanetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPlanetRequest.ProtoReflect.Descriptor instead.
func (*StartPlanetRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{12}
}

func (x *StartPlanetRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type StartPlanetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` //0 所有 1房间服 2 解析服 3 业务服
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StartPlanetResponse) Reset() {
	*x = StartPlanetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPlanetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPlanetResponse) ProtoMessage() {}

func (x *StartPlanetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPlanetResponse.ProtoReflect.Descriptor instead.
func (*StartPlanetResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{13}
}

func (x *StartPlanetResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StartPlanetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReStartStreamVRRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Addr     string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	AddrList []string `protobuf:"bytes,3,rep,name=addrList,proto3" json:"addrList,omitempty"`
}

func (x *ReStartStreamVRRequest) Reset() {
	*x = ReStartStreamVRRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReStartStreamVRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReStartStreamVRRequest) ProtoMessage() {}

func (x *ReStartStreamVRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReStartStreamVRRequest.ProtoReflect.Descriptor instead.
func (*ReStartStreamVRRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{14}
}

func (x *ReStartStreamVRRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ReStartStreamVRRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ReStartStreamVRRequest) GetAddrList() []string {
	if x != nil {
		return x.AddrList
	}
	return nil
}

type ReStartStreamVRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReStartStreamVRResponse) Reset() {
	*x = ReStartStreamVRResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReStartStreamVRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReStartStreamVRResponse) ProtoMessage() {}

func (x *ReStartStreamVRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReStartStreamVRResponse.ProtoReflect.Descriptor instead.
func (*ReStartStreamVRResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{15}
}

func (x *ReStartStreamVRResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ReStartStreamVRResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReStartAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Addr     string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	AddrList []string `protobuf:"bytes,3,rep,name=addrList,proto3" json:"addrList,omitempty"`
}

func (x *ReStartAppRequest) Reset() {
	*x = ReStartAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReStartAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReStartAppRequest) ProtoMessage() {}

func (x *ReStartAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReStartAppRequest.ProtoReflect.Descriptor instead.
func (*ReStartAppRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{16}
}

func (x *ReStartAppRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ReStartAppRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ReStartAppRequest) GetAddrList() []string {
	if x != nil {
		return x.AddrList
	}
	return nil
}

type ReStartAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReStartAppResponse) Reset() {
	*x = ReStartAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReStartAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReStartAppResponse) ProtoMessage() {}

func (x *ReStartAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReStartAppResponse.ProtoReflect.Descriptor instead.
func (*ReStartAppResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{17}
}

func (x *ReStartAppResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ReStartAppResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetFbxUploadUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFbxUploadUrlRequest) Reset() {
	*x = GetFbxUploadUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFbxUploadUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFbxUploadUrlRequest) ProtoMessage() {}

func (x *GetFbxUploadUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFbxUploadUrlRequest.ProtoReflect.Descriptor instead.
func (*GetFbxUploadUrlRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{18}
}

// 获取解析服务器地址
type GetFbxUploadUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Url         string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	CompleteUrl string `protobuf:"bytes,4,opt,name=completeUrl,proto3" json:"completeUrl,omitempty"`
}

func (x *GetFbxUploadUrlResponse) Reset() {
	*x = GetFbxUploadUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFbxUploadUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFbxUploadUrlResponse) ProtoMessage() {}

func (x *GetFbxUploadUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFbxUploadUrlResponse.ProtoReflect.Descriptor instead.
func (*GetFbxUploadUrlResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{19}
}

func (x *GetFbxUploadUrlResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetFbxUploadUrlResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetFbxUploadUrlResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetFbxUploadUrlResponse) GetCompleteUrl() string {
	if x != nil {
		return x.CompleteUrl
	}
	return ""
}

type StartUERequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartType UEType `protobuf:"varint,1,opt,name=startType,proto3,enum=UEType" json:"startType,omitempty"`
	JsonData  string `protobuf:"bytes,2,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
}

func (x *StartUERequest) Reset() {
	*x = StartUERequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartUERequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartUERequest) ProtoMessage() {}

func (x *StartUERequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartUERequest.ProtoReflect.Descriptor instead.
func (*StartUERequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{20}
}

func (x *StartUERequest) GetStartType() UEType {
	if x != nil {
		return x.StartType
	}
	return UEType_StartServer
}

func (x *StartUERequest) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type StartUEResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Addr    string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *StartUEResponse) Reset() {
	*x = StartUEResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartUEResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartUEResponse) ProtoMessage() {}

func (x *StartUEResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartUEResponse.ProtoReflect.Descriptor instead.
func (*StartUEResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{21}
}

func (x *StartUEResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StartUEResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StartUEResponse) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName         string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Filepath         string   `protobuf:"bytes,2,opt,name=filepath,proto3" json:"filepath,omitempty"`
	LastModifiedTime int64    `protobuf:"varint,3,opt,name=LastModifiedTime,proto3" json:"LastModifiedTime,omitempty"` //最后修改时间
	PakList          []string `protobuf:"bytes,4,rep,name=pakList,proto3" json:"pakList,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{22}
}

func (x *File) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *File) GetFilepath() string {
	if x != nil {
		return x.Filepath
	}
	return ""
}

func (x *File) GetLastModifiedTime() int64 {
	if x != nil {
		return x.LastModifiedTime
	}
	return 0
}

func (x *File) GetPakList() []string {
	if x != nil {
		return x.PakList
	}
	return nil
}

type GetUpdateFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType   int32  `protobuf:"varint,1,opt,name=fileType,proto3" json:"fileType,omitempty"`
	ServerID   string `protobuf:"bytes,2,opt,name=serverID,proto3" json:"serverID,omitempty"`
	ServerType int32  `protobuf:"varint,3,opt,name=serverType,proto3" json:"serverType,omitempty"` //0 所有 1房间服 2 解析服 3 业务服
}

func (x *GetUpdateFilesRequest) Reset() {
	*x = GetUpdateFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpdateFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpdateFilesRequest) ProtoMessage() {}

func (x *GetUpdateFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpdateFilesRequest.ProtoReflect.Descriptor instead.
func (*GetUpdateFilesRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{23}
}

func (x *GetUpdateFilesRequest) GetFileType() int32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *GetUpdateFilesRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *GetUpdateFilesRequest) GetServerType() int32 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

type GetUpdateFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Files   []*File `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *GetUpdateFilesResponse) Reset() {
	*x = GetUpdateFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpdateFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpdateFilesResponse) ProtoMessage() {}

func (x *GetUpdateFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpdateFilesResponse.ProtoReflect.Descriptor instead.
func (*GetUpdateFilesResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{24}
}

func (x *GetUpdateFilesResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetUpdateFilesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUpdateFilesResponse) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type GetVersionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *GetVersionListRequest) Reset() {
	*x = GetVersionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionListRequest) ProtoMessage() {}

func (x *GetVersionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionListRequest.ProtoReflect.Descriptor instead.
func (*GetVersionListRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{25}
}

func (x *GetVersionListRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type VersionFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize int64  `protobuf:"varint,2,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
}

func (x *VersionFile) Reset() {
	*x = VersionFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionFile) ProtoMessage() {}

func (x *VersionFile) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionFile.ProtoReflect.Descriptor instead.
func (*VersionFile) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{26}
}

func (x *VersionFile) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *VersionFile) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type GetVersionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	List    []*VersionFile `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetVersionListResponse) Reset() {
	*x = GetVersionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionListResponse) ProtoMessage() {}

func (x *GetVersionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionListResponse.ProtoReflect.Descriptor instead.
func (*GetVersionListResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{27}
}

func (x *GetVersionListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetVersionListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetVersionListResponse) GetList() []*VersionFile {
	if x != nil {
		return x.List
	}
	return nil
}

type VersionDownLoadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName    string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	VersionType int32    `protobuf:"varint,2,opt,name=versionType,proto3" json:"versionType,omitempty"`
	PakList     []string `protobuf:"bytes,3,rep,name=pakList,proto3" json:"pakList,omitempty"`
	// string fileServer = 4;//内部服务器地址
	UpdateType int32 `protobuf:"varint,6,opt,name=updateType,proto3" json:"updateType,omitempty"` //更新类型:0-普通更新，1-强制更新，2-重新下载
}

func (x *VersionDownLoadRequest) Reset() {
	*x = VersionDownLoadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionDownLoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionDownLoadRequest) ProtoMessage() {}

func (x *VersionDownLoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionDownLoadRequest.ProtoReflect.Descriptor instead.
func (*VersionDownLoadRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{28}
}

func (x *VersionDownLoadRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *VersionDownLoadRequest) GetVersionType() int32 {
	if x != nil {
		return x.VersionType
	}
	return 0
}

func (x *VersionDownLoadRequest) GetPakList() []string {
	if x != nil {
		return x.PakList
	}
	return nil
}

func (x *VersionDownLoadRequest) GetUpdateType() int32 {
	if x != nil {
		return x.UpdateType
	}
	return 0
}

type VersionDownLoadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *VersionDownLoadResponse) Reset() {
	*x = VersionDownLoadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionDownLoadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionDownLoadResponse) ProtoMessage() {}

func (x *VersionDownLoadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionDownLoadResponse.ProtoReflect.Descriptor instead.
func (*VersionDownLoadResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{29}
}

func (x *VersionDownLoadResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VersionDownLoadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	UpdateVersion string `protobuf:"bytes,2,opt,name=updateVersion,proto3" json:"updateVersion,omitempty"`
	State         int32  `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	CreateTime    string `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime    string `protobuf:"bytes,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{30}
}

func (x *Version) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Version) GetUpdateVersion() string {
	if x != nil {
		return x.UpdateVersion
	}
	return ""
}

func (x *Version) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Version) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Version) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type GetVersionInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionInfoRequest) Reset() {
	*x = GetVersionInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionInfoRequest) ProtoMessage() {}

func (x *GetVersionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionInfoRequest.ProtoReflect.Descriptor instead.
func (*GetVersionInfoRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{31}
}

type GetVersionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Version *Version `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetVersionInfoResponse) Reset() {
	*x = GetVersionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionInfoResponse) ProtoMessage() {}

func (x *GetVersionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionInfoResponse.ProtoReflect.Descriptor instead.
func (*GetVersionInfoResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{32}
}

func (x *GetVersionInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetVersionInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetVersionInfoResponse) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

// 渲染服消息体
type RenderServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID       string  `protobuf:"bytes,1,opt,name=serverID,proto3" json:"serverID,omitempty"`     //服务器id，绑定网卡和cpu
	ServerAddr     string  `protobuf:"bytes,2,opt,name=serverAddr,proto3" json:"serverAddr,omitempty"` //服务器地址 grpc
	InternalAddr   string  `protobuf:"bytes,3,opt,name=internalAddr,proto3" json:"internalAddr,omitempty"`
	Version        string  `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`                //当前版本号
	State          int32   `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`                   //版本状态
	UpdateVersion  string  `protobuf:"bytes,6,opt,name=updateVersion,proto3" json:"updateVersion,omitempty"`    //更新版本
	CreateTime     string  `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`          //版本创建时间
	UpdateTime     string  `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`          //版本更新时间
	Device         string  `protobuf:"bytes,9,opt,name=device,proto3" json:"device,omitempty"`                  //设备id
	DeviceName     string  `protobuf:"bytes,10,opt,name=deviceName,proto3" json:"deviceName,omitempty"`         //设备备注
	Flag           int32   `protobuf:"varint,11,opt,name=flag,proto3" json:"flag,omitempty"`                    //服务器标识
	ServerName     string  `protobuf:"bytes,12,opt,name=serverName,proto3" json:"serverName,omitempty"`         //服务器备注
	EnterpriseName string  `protobuf:"bytes,13,opt,name=enterpriseName,proto3" json:"enterpriseName,omitempty"` //服务器备注
	EnterpriseId   int32   `protobuf:"varint,14,opt,name=enterpriseId,proto3" json:"enterpriseId,omitempty"`    //服务器备注
	LicenseId      string  `protobuf:"bytes,15,opt,name=licenseId,proto3" json:"licenseId,omitempty"`           //授权码
	ValidDate      string  `protobuf:"bytes,16,opt,name=validDate,proto3" json:"validDate,omitempty"`
	ProxyMode      bool    `protobuf:"varint,17,opt,name=proxyMode,proto3" json:"proxyMode,omitempty"`
	Lflag          []int32 `protobuf:"varint,18,rep,packed,name=lflag,proto3" json:"lflag,omitempty"` //服务器标识
	InstanceId     string  `protobuf:"bytes,19,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	AgencyId       string  `protobuf:"bytes,20,opt,name=agencyId,proto3" json:"agencyId,omitempty"`
	Region         string  `protobuf:"bytes,21,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *RenderServer) Reset() {
	*x = RenderServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderServer) ProtoMessage() {}

func (x *RenderServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderServer.ProtoReflect.Descriptor instead.
func (*RenderServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{33}
}

func (x *RenderServer) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *RenderServer) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *RenderServer) GetInternalAddr() string {
	if x != nil {
		return x.InternalAddr
	}
	return ""
}

func (x *RenderServer) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RenderServer) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *RenderServer) GetUpdateVersion() string {
	if x != nil {
		return x.UpdateVersion
	}
	return ""
}

func (x *RenderServer) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *RenderServer) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *RenderServer) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *RenderServer) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *RenderServer) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *RenderServer) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *RenderServer) GetEnterpriseName() string {
	if x != nil {
		return x.EnterpriseName
	}
	return ""
}

func (x *RenderServer) GetEnterpriseId() int32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *RenderServer) GetLicenseId() string {
	if x != nil {
		return x.LicenseId
	}
	return ""
}

func (x *RenderServer) GetValidDate() string {
	if x != nil {
		return x.ValidDate
	}
	return ""
}

func (x *RenderServer) GetProxyMode() bool {
	if x != nil {
		return x.ProxyMode
	}
	return false
}

func (x *RenderServer) GetLflag() []int32 {
	if x != nil {
		return x.Lflag
	}
	return nil
}

func (x *RenderServer) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *RenderServer) GetAgencyId() string {
	if x != nil {
		return x.AgencyId
	}
	return ""
}

func (x *RenderServer) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type GetRenderServerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRenderServerInfoRequest) Reset() {
	*x = GetRenderServerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRenderServerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRenderServerInfoRequest) ProtoMessage() {}

func (x *GetRenderServerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRenderServerInfoRequest.ProtoReflect.Descriptor instead.
func (*GetRenderServerInfoRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{34}
}

type GetRenderServerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Info    *RenderServer `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetRenderServerInfoResponse) Reset() {
	*x = GetRenderServerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRenderServerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRenderServerInfoResponse) ProtoMessage() {}

func (x *GetRenderServerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRenderServerInfoResponse.ProtoReflect.Descriptor instead.
func (*GetRenderServerInfoResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{35}
}

func (x *GetRenderServerInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRenderServerInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetRenderServerInfoResponse) GetInfo() *RenderServer {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateRenderServerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRenderServerInfoRequest) Reset() {
	*x = UpdateRenderServerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRenderServerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRenderServerInfoRequest) ProtoMessage() {}

func (x *UpdateRenderServerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRenderServerInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateRenderServerInfoRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{36}
}

type UpdateRenderServerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Info    *RenderServer `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UpdateRenderServerInfoResponse) Reset() {
	*x = UpdateRenderServerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRenderServerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRenderServerInfoResponse) ProtoMessage() {}

func (x *UpdateRenderServerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRenderServerInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateRenderServerInfoResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateRenderServerInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateRenderServerInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateRenderServerInfoResponse) GetInfo() *RenderServer {
	if x != nil {
		return x.Info
	}
	return nil
}

type CheckPakServerRestartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckPakServerRestartRequest) Reset() {
	*x = CheckPakServerRestartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPakServerRestartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPakServerRestartRequest) ProtoMessage() {}

func (x *CheckPakServerRestartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPakServerRestartRequest.ProtoReflect.Descriptor instead.
func (*CheckPakServerRestartRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{38}
}

type CheckPakServerRestartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ReStart  bool   `protobuf:"varint,3,opt,name=reStart,proto3" json:"reStart,omitempty"` //是否重启
	DiskSize int64  `protobuf:"varint,4,opt,name=diskSize,proto3" json:"diskSize,omitempty"`
}

func (x *CheckPakServerRestartResponse) Reset() {
	*x = CheckPakServerRestartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPakServerRestartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPakServerRestartResponse) ProtoMessage() {}

func (x *CheckPakServerRestartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPakServerRestartResponse.ProtoReflect.Descriptor instead.
func (*CheckPakServerRestartResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{39}
}

func (x *CheckPakServerRestartResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckPakServerRestartResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckPakServerRestartResponse) GetReStart() bool {
	if x != nil {
		return x.ReStart
	}
	return false
}

func (x *CheckPakServerRestartResponse) GetDiskSize() int64 {
	if x != nil {
		return x.DiskSize
	}
	return 0
}

type ParseFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FId       string `protobuf:"bytes,1,opt,name=fId,proto3" json:"fId,omitempty"`
	FileName  string `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	ApplyType int32  `protobuf:"varint,3,opt,name=applyType,proto3" json:"applyType,omitempty"`
	Md5       string `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`
	FilePath  string `protobuf:"bytes,5,opt,name=filePath,proto3" json:"filePath,omitempty"`
	FileSize  int64  `protobuf:"varint,6,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	UserId    int32  `protobuf:"varint,7,opt,name=userId,proto3" json:"userId,omitempty"`
	Usertype  int32  `protobuf:"varint,8,opt,name=usertype,proto3" json:"usertype,omitempty"`
}

func (x *ParseFile) Reset() {
	*x = ParseFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseFile) ProtoMessage() {}

func (x *ParseFile) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseFile.ProtoReflect.Descriptor instead.
func (*ParseFile) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{40}
}

func (x *ParseFile) GetFId() string {
	if x != nil {
		return x.FId
	}
	return ""
}

func (x *ParseFile) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ParseFile) GetApplyType() int32 {
	if x != nil {
		return x.ApplyType
	}
	return 0
}

func (x *ParseFile) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *ParseFile) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ParseFile) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *ParseFile) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ParseFile) GetUsertype() int32 {
	if x != nil {
		return x.Usertype
	}
	return 0
}

type PushParseFileListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ParseFile `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PushParseFileListRequest) Reset() {
	*x = PushParseFileListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushParseFileListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushParseFileListRequest) ProtoMessage() {}

func (x *PushParseFileListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushParseFileListRequest.ProtoReflect.Descriptor instead.
func (*PushParseFileListRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{41}
}

func (x *PushParseFileListRequest) GetList() []*ParseFile {
	if x != nil {
		return x.List
	}
	return nil
}

type PushParseFileListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PushParseFileListResponse) Reset() {
	*x = PushParseFileListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushParseFileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushParseFileListResponse) ProtoMessage() {}

func (x *PushParseFileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushParseFileListResponse.ProtoReflect.Descriptor instead.
func (*PushParseFileListResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{42}
}

func (x *PushParseFileListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PushParseFileListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetLogFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root int32 `protobuf:"varint,1,opt,name=root,proto3" json:"root,omitempty"` //1-同步服 2-渲染服
}

func (x *GetLogFileRequest) Reset() {
	*x = GetLogFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogFileRequest) ProtoMessage() {}

func (x *GetLogFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogFileRequest.ProtoReflect.Descriptor instead.
func (*GetLogFileRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{43}
}

func (x *GetLogFileRequest) GetRoot() int32 {
	if x != nil {
		return x.Root
	}
	return 0
}

type GetLogFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*LogFileInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` //路径下载地址
	Code    int32          `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetLogFileResponse) Reset() {
	*x = GetLogFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogFileResponse) ProtoMessage() {}

func (x *GetLogFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogFileResponse.ProtoReflect.Descriptor instead.
func (*GetLogFileResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{44}
}

func (x *GetLogFileResponse) GetList() []*LogFileInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetLogFileResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetLogFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LogFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dir      string      `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"`
	PathList []*PathInfo `protobuf:"bytes,2,rep,name=pathList,proto3" json:"pathList,omitempty"` //路径下载地址
	Total    int32       `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *LogFileInfo) Reset() {
	*x = LogFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogFileInfo) ProtoMessage() {}

func (x *LogFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogFileInfo.ProtoReflect.Descriptor instead.
func (*LogFileInfo) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{45}
}

func (x *LogFileInfo) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *LogFileInfo) GetPathList() []*PathInfo {
	if x != nil {
		return x.PathList
	}
	return nil
}

func (x *LogFileInfo) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PathInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	LastTime string `protobuf:"bytes,2,opt,name=lastTime,proto3" json:"lastTime,omitempty"`
	Download string `protobuf:"bytes,3,opt,name=download,proto3" json:"download,omitempty"`
}

func (x *PathInfo) Reset() {
	*x = PathInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathInfo) ProtoMessage() {}

func (x *PathInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathInfo.ProtoReflect.Descriptor instead.
func (*PathInfo) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{46}
}

func (x *PathInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PathInfo) GetLastTime() string {
	if x != nil {
		return x.LastTime
	}
	return ""
}

func (x *PathInfo) GetDownload() string {
	if x != nil {
		return x.Download
	}
	return ""
}

type GetLogFileListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root      int32  `protobuf:"varint,1,opt,name=root,proto3" json:"root,omitempty"` //1-同步服 2-渲染服
	Ip        string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`      //服务器ip端口127.0.0.1:38601
	PageIndex int32  `protobuf:"varint,3,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize  int32  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Token     string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetLogFileListRequest) Reset() {
	*x = GetLogFileListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogFileListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogFileListRequest) ProtoMessage() {}

func (x *GetLogFileListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogFileListRequest.ProtoReflect.Descriptor instead.
func (*GetLogFileListRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{47}
}

func (x *GetLogFileListRequest) GetRoot() int32 {
	if x != nil {
		return x.Root
	}
	return 0
}

func (x *GetLogFileListRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GetLogFileListRequest) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetLogFileListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetLogFileListRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetLogFileListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*LogFileInfo `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`     //路径下载地址
	WsAddr  string         `protobuf:"bytes,2,opt,name=wsAddr,proto3" json:"wsAddr,omitempty"` //websocket 地址
	Code    int32          `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetLogFileListResponse) Reset() {
	*x = GetLogFileListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogFileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogFileListResponse) ProtoMessage() {}

func (x *GetLogFileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogFileListResponse.ProtoReflect.Descriptor instead.
func (*GetLogFileListResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{48}
}

func (x *GetLogFileListResponse) GetList() []*LogFileInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetLogFileListResponse) GetWsAddr() string {
	if x != nil {
		return x.WsAddr
	}
	return ""
}

func (x *GetLogFileListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetLogFileListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DownLoadParseFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *ParseFile `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *DownLoadParseFileRequest) Reset() {
	*x = DownLoadParseFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownLoadParseFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownLoadParseFileRequest) ProtoMessage() {}

func (x *DownLoadParseFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownLoadParseFileRequest.ProtoReflect.Descriptor instead.
func (*DownLoadParseFileRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{49}
}

func (x *DownLoadParseFileRequest) GetFile() *ParseFile {
	if x != nil {
		return x.File
	}
	return nil
}

type DownLoadParseFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DownLoadParseFileResponse) Reset() {
	*x = DownLoadParseFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownLoadParseFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownLoadParseFileResponse) ProtoMessage() {}

func (x *DownLoadParseFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownLoadParseFileResponse.ProtoReflect.Descriptor instead.
func (*DownLoadParseFileResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{50}
}

func (x *DownLoadParseFileResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DownLoadParseFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetInternalListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ServerID string `protobuf:"bytes,2,opt,name=serverID,proto3" json:"serverID,omitempty"`
}

func (x *GetInternalListRequest) Reset() {
	*x = GetInternalListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInternalListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInternalListRequest) ProtoMessage() {}

func (x *GetInternalListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInternalListRequest.ProtoReflect.Descriptor instead.
func (*GetInternalListRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{51}
}

func (x *GetInternalListRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetInternalListRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

type GetInternalListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	List    []*ServerListItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetInternalListResponse) Reset() {
	*x = GetInternalListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInternalListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInternalListResponse) ProtoMessage() {}

func (x *GetInternalListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInternalListResponse.ProtoReflect.Descriptor instead.
func (*GetInternalListResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{52}
}

func (x *GetInternalListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetInternalListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetInternalListResponse) GetList() []*ServerListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type ServerListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerID string `protobuf:"bytes,1,opt,name=serverID,proto3" json:"serverID,omitempty"`
	Ip       string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *ServerListItem) Reset() {
	*x = ServerListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerListItem) ProtoMessage() {}

func (x *ServerListItem) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerListItem.ProtoReflect.Descriptor instead.
func (*ServerListItem) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{53}
}

func (x *ServerListItem) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *ServerListItem) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type RenderRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId string   `protobuf:"bytes,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Info     []string `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty"`
}

func (x *RenderRegister) Reset() {
	*x = RenderRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderRegister) ProtoMessage() {}

func (x *RenderRegister) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderRegister.ProtoReflect.Descriptor instead.
func (*RenderRegister) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{54}
}

func (x *RenderRegister) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *RenderRegister) GetInfo() []string {
	if x != nil {
		return x.Info
	}
	return nil
}

type ConsulInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location     string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	DevId        string `protobuf:"bytes,2,opt,name=devId,proto3" json:"devId,omitempty"`
	GhsServer    bool   `protobuf:"varint,3,opt,name=ghsServer,proto3" json:"ghsServer,omitempty"`
	InternalAddr string `protobuf:"bytes,4,opt,name=internalAddr,proto3" json:"internalAddr,omitempty"`
}

func (x *ConsulInfo) Reset() {
	*x = ConsulInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsulInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsulInfo) ProtoMessage() {}

func (x *ConsulInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsulInfo.ProtoReflect.Descriptor instead.
func (*ConsulInfo) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{55}
}

func (x *ConsulInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ConsulInfo) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

func (x *ConsulInfo) GetGhsServer() bool {
	if x != nil {
		return x.GhsServer
	}
	return false
}

func (x *ConsulInfo) GetInternalAddr() string {
	if x != nil {
		return x.InternalAddr
	}
	return ""
}

type ProxyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType Method `protobuf:"varint,1,opt,name=messageType,proto3,enum=Method" json:"messageType,omitempty"`
	Data        []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProxyData) Reset() {
	*x = ProxyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyData) ProtoMessage() {}

func (x *ProxyData) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyData.ProtoReflect.Descriptor instead.
func (*ProxyData) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{56}
}

func (x *ProxyData) GetMessageType() Method {
	if x != nil {
		return x.MessageType
	}
	return Method_Method_Register
}

func (x *ProxyData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 渲染服消息实体
type RenderServerGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnterpriseName string          `protobuf:"bytes,1,opt,name=enterpriseName,proto3" json:"enterpriseName,omitempty"`
	EnterpriseId   int32           `protobuf:"varint,2,opt,name=enterpriseId,proto3" json:"enterpriseId,omitempty"`
	List           []*RenderServer `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RenderServerGroupInfo) Reset() {
	*x = RenderServerGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderServerGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderServerGroupInfo) ProtoMessage() {}

func (x *RenderServerGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderServerGroupInfo.ProtoReflect.Descriptor instead.
func (*RenderServerGroupInfo) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{57}
}

func (x *RenderServerGroupInfo) GetEnterpriseName() string {
	if x != nil {
		return x.EnterpriseName
	}
	return ""
}

func (x *RenderServerGroupInfo) GetEnterpriseId() int32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *RenderServerGroupInfo) GetList() []*RenderServer {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取渲染服服务器列表
type GetRenderServerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	PageIndex int32  `protobuf:"varint,2,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	PageSize  int32  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Search    string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetRenderServerListRequest) Reset() {
	*x = GetRenderServerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRenderServerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRenderServerListRequest) ProtoMessage() {}

func (x *GetRenderServerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRenderServerListRequest.ProtoReflect.Descriptor instead.
func (*GetRenderServerListRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{58}
}

func (x *GetRenderServerListRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetRenderServerListRequest) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetRenderServerListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetRenderServerListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

// 获取渲染服服务器列表
type GetRenderServerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message          string                   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code             int32                    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"` //0 所有 1房间服 2 解析服 3 业务服
	List             []*RenderServerGroupInfo `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	DeviceOnLineList []*RenderServer          `protobuf:"bytes,4,rep,name=deviceOnLineList,proto3" json:"deviceOnLineList,omitempty"`
	Total            int32                    `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetRenderServerListResponse) Reset() {
	*x = GetRenderServerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRenderServerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRenderServerListResponse) ProtoMessage() {}

func (x *GetRenderServerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRenderServerListResponse.ProtoReflect.Descriptor instead.
func (*GetRenderServerListResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{59}
}

func (x *GetRenderServerListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetRenderServerListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRenderServerListResponse) GetList() []*RenderServerGroupInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetRenderServerListResponse) GetDeviceOnLineList() []*RenderServer {
	if x != nil {
		return x.DeviceOnLineList
	}
	return nil
}

func (x *GetRenderServerListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RestartSyncServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ServerId string `protobuf:"bytes,2,opt,name=serverId,proto3" json:"serverId,omitempty"`
}

func (x *RestartSyncServerRequest) Reset() {
	*x = RestartSyncServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartSyncServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartSyncServerRequest) ProtoMessage() {}

func (x *RestartSyncServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartSyncServerRequest.ProtoReflect.Descriptor instead.
func (*RestartSyncServerRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{60}
}

func (x *RestartSyncServerRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RestartSyncServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type RestartSyncServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *RestartSyncServerResponse) Reset() {
	*x = RestartSyncServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartSyncServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartSyncServerResponse) ProtoMessage() {}

func (x *RestartSyncServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartSyncServerResponse.ProtoReflect.Descriptor instead.
func (*RestartSyncServerResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{61}
}

func (x *RestartSyncServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RestartSyncServerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// ========================================================================
// 渲染/代理服务器踢出设备
type ServerDeviceOutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr  string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"` //服务器
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ServerDeviceOutRequest) Reset() {
	*x = ServerDeviceOutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDeviceOutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDeviceOutRequest) ProtoMessage() {}

func (x *ServerDeviceOutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDeviceOutRequest.ProtoReflect.Descriptor instead.
func (*ServerDeviceOutRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{62}
}

func (x *ServerDeviceOutRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ServerDeviceOutRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ServerDeviceOutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ServerDeviceOutResponse) Reset() {
	*x = ServerDeviceOutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerDeviceOutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDeviceOutResponse) ProtoMessage() {}

func (x *ServerDeviceOutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDeviceOutResponse.ProtoReflect.Descriptor instead.
func (*ServerDeviceOutResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{63}
}

func (x *ServerDeviceOutResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ServerDeviceOutResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ========================================================================
// 渲染/代理服务器重启Steam
type ServersRestartSteamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddrList []string `protobuf:"bytes,1,rep,name=addrList,proto3" json:"addrList,omitempty"` //服务器地址列表
	Token    string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ServersRestartSteamRequest) Reset() {
	*x = ServersRestartSteamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServersRestartSteamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServersRestartSteamRequest) ProtoMessage() {}

func (x *ServersRestartSteamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServersRestartSteamRequest.ProtoReflect.Descriptor instead.
func (*ServersRestartSteamRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{64}
}

func (x *ServersRestartSteamRequest) GetAddrList() []string {
	if x != nil {
		return x.AddrList
	}
	return nil
}

func (x *ServersRestartSteamRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ServersRestartSteamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ServersRestartSteamResponse) Reset() {
	*x = ServersRestartSteamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServersRestartSteamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServersRestartSteamResponse) ProtoMessage() {}

func (x *ServersRestartSteamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServersRestartSteamResponse.ProtoReflect.Descriptor instead.
func (*ServersRestartSteamResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{65}
}

func (x *ServersRestartSteamResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ServersRestartSteamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ========================================================================
// 渲染/代理服务器重启App
type ServersRestartAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddrList []string `protobuf:"bytes,1,rep,name=addrList,proto3" json:"addrList,omitempty"` //服务器地址列表
	Token    string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ServersRestartAppRequest) Reset() {
	*x = ServersRestartAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServersRestartAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServersRestartAppRequest) ProtoMessage() {}

func (x *ServersRestartAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServersRestartAppRequest.ProtoReflect.Descriptor instead.
func (*ServersRestartAppRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{66}
}

func (x *ServersRestartAppRequest) GetAddrList() []string {
	if x != nil {
		return x.AddrList
	}
	return nil
}

func (x *ServersRestartAppRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ServersRestartAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ServersRestartAppResponse) Reset() {
	*x = ServersRestartAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServersRestartAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServersRestartAppResponse) ProtoMessage() {}

func (x *ServersRestartAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServersRestartAppResponse.ProtoReflect.Descriptor instead.
func (*ServersRestartAppResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{67}
}

func (x *ServersRestartAppResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ServersRestartAppResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ========================================================================
// 分配渲染/代理服务器地址
type ServersAddrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID string `protobuf:"bytes,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"` //设备ID
	Area     string `protobuf:"bytes,2,opt,name=area,proto3" json:"area,omitempty"`         //区域
	Version  string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`   //版本
	Token    string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ServersAddrRequest) Reset() {
	*x = ServersAddrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServersAddrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServersAddrRequest) ProtoMessage() {}

func (x *ServersAddrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServersAddrRequest.ProtoReflect.Descriptor instead.
func (*ServersAddrRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{68}
}

func (x *ServersAddrRequest) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *ServersAddrRequest) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *ServersAddrRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServersAddrRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ServersAddrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Addr    string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"` //分配地址
}

func (x *ServersAddrResponse) Reset() {
	*x = ServersAddrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServersAddrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServersAddrResponse) ProtoMessage() {}

func (x *ServersAddrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServersAddrResponse.ProtoReflect.Descriptor instead.
func (*ServersAddrResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{69}
}

func (x *ServersAddrResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ServersAddrResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServersAddrResponse) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

// ========================================================================
// 同步/解析强制重启服务器
type RestartServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ServerIDs []string `protobuf:"bytes,3,rep,name=serverIDs,proto3" json:"serverIDs,omitempty"`
}

func (x *RestartServerRequest) Reset() {
	*x = RestartServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartServerRequest) ProtoMessage() {}

func (x *RestartServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartServerRequest.ProtoReflect.Descriptor instead.
func (*RestartServerRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{70}
}

func (x *RestartServerRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RestartServerRequest) GetServerIDs() []string {
	if x != nil {
		return x.ServerIDs
	}
	return nil
}

type RestartServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *RestartServerResponse) Reset() {
	*x = RestartServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartServerResponse) ProtoMessage() {}

func (x *RestartServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartServerResponse.ProtoReflect.Descriptor instead.
func (*RestartServerResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{71}
}

func (x *RestartServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RestartServerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// ========================================================================
// 获取更新版本列表
type GetServerUpdateFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ServerID string `protobuf:"bytes,2,opt,name=serverID,proto3" json:"serverID,omitempty"`
	FileType int32  `protobuf:"varint,3,opt,name=fileType,proto3" json:"fileType,omitempty"`
}

func (x *GetServerUpdateFilesRequest) Reset() {
	*x = GetServerUpdateFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerUpdateFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerUpdateFilesRequest) ProtoMessage() {}

func (x *GetServerUpdateFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerUpdateFilesRequest.ProtoReflect.Descriptor instead.
func (*GetServerUpdateFilesRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{72}
}

func (x *GetServerUpdateFilesRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetServerUpdateFilesRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *GetServerUpdateFilesRequest) GetFileType() int32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

type GetServerUpdateFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Files   []*ServerFile `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *GetServerUpdateFilesResponse) Reset() {
	*x = GetServerUpdateFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerUpdateFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerUpdateFilesResponse) ProtoMessage() {}

func (x *GetServerUpdateFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerUpdateFilesResponse.ProtoReflect.Descriptor instead.
func (*GetServerUpdateFilesResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{73}
}

func (x *GetServerUpdateFilesResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetServerUpdateFilesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetServerUpdateFilesResponse) GetFiles() []*ServerFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type ServerFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FilePath string   `protobuf:"bytes,2,opt,name=filePath,proto3" json:"filePath,omitempty"`
	PakList  []string `protobuf:"bytes,3,rep,name=pakList,proto3" json:"pakList,omitempty"`
}

func (x *ServerFile) Reset() {
	*x = ServerFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerFile) ProtoMessage() {}

func (x *ServerFile) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerFile.ProtoReflect.Descriptor instead.
func (*ServerFile) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{74}
}

func (x *ServerFile) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ServerFile) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ServerFile) GetPakList() []string {
	if x != nil {
		return x.PakList
	}
	return nil
}

// ========================================================================
// 服务器更新
type UpdateVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`          //版本号
	VersionType int32  `protobuf:"varint,2,opt,name=versionType,proto3" json:"versionType,omitempty"` //0更新同步服，1更新渲染服
	ServerID    string `protobuf:"bytes,3,opt,name=serverID,proto3" json:"serverID,omitempty"`        //更新的服务器id
	// string fileServer = 4;//内部服务器地址
	PakList    []string `protobuf:"bytes,5,rep,name=pakList,proto3" json:"pakList,omitempty"`        //更新组件包与基础包列表
	UpdateType int32    `protobuf:"varint,6,opt,name=updateType,proto3" json:"updateType,omitempty"` //更新类型:0-普通更新，1-强制更新，2-重新下载
}

func (x *UpdateVersionRequest) Reset() {
	*x = UpdateVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVersionRequest) ProtoMessage() {}

func (x *UpdateVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVersionRequest.ProtoReflect.Descriptor instead.
func (*UpdateVersionRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{75}
}

func (x *UpdateVersionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpdateVersionRequest) GetVersionType() int32 {
	if x != nil {
		return x.VersionType
	}
	return 0
}

func (x *UpdateVersionRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *UpdateVersionRequest) GetPakList() []string {
	if x != nil {
		return x.PakList
	}
	return nil
}

func (x *UpdateVersionRequest) GetUpdateType() int32 {
	if x != nil {
		return x.UpdateType
	}
	return 0
}

type UpdateVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateVersionResponse) Reset() {
	*x = UpdateVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVersionResponse) ProtoMessage() {}

func (x *UpdateVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVersionResponse.ProtoReflect.Descriptor instead.
func (*UpdateVersionResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{76}
}

func (x *UpdateVersionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateVersionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 服务器注册信息
type RegisterServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId       string `protobuf:"bytes,1,opt,name=serverId,proto3" json:"serverId,omitempty"`             //服务器id
	Eid            string `protobuf:"bytes,2,opt,name=eid,proto3" json:"eid,omitempty"`                       //企业id
	DeviceId       string `protobuf:"bytes,3,opt,name=deviceId,proto3" json:"deviceId,omitempty"`             //连接服务器设备
	CurrentVersion string `protobuf:"bytes,4,opt,name=currentVersion,proto3" json:"currentVersion,omitempty"` //当前VR版本
	UpdateVersion  string `protobuf:"bytes,5,opt,name=updateVersion,proto3" json:"updateVersion,omitempty"`   //更新VR版本
	UpdateState    string `protobuf:"bytes,6,opt,name=updateState,proto3" json:"updateState,omitempty"`       //VR版本更新状态
	UpdateTime     string `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`         //VR版本更新时间
	InternalAddr   string `protobuf:"bytes,8,opt,name=internalAddr,proto3" json:"internalAddr,omitempty"`     //内部地址
	ServerVersion  string `protobuf:"bytes,9,opt,name=serverVersion,proto3" json:"serverVersion,omitempty"`   //服务器版本
}

func (x *RegisterServerInfo) Reset() {
	*x = RegisterServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServerInfo) ProtoMessage() {}

func (x *RegisterServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServerInfo.ProtoReflect.Descriptor instead.
func (*RegisterServerInfo) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{77}
}

func (x *RegisterServerInfo) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *RegisterServerInfo) GetEid() string {
	if x != nil {
		return x.Eid
	}
	return ""
}

func (x *RegisterServerInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RegisterServerInfo) GetCurrentVersion() string {
	if x != nil {
		return x.CurrentVersion
	}
	return ""
}

func (x *RegisterServerInfo) GetUpdateVersion() string {
	if x != nil {
		return x.UpdateVersion
	}
	return ""
}

func (x *RegisterServerInfo) GetUpdateState() string {
	if x != nil {
		return x.UpdateState
	}
	return ""
}

func (x *RegisterServerInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *RegisterServerInfo) GetInternalAddr() string {
	if x != nil {
		return x.InternalAddr
	}
	return ""
}

func (x *RegisterServerInfo) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

var File_server_proto protoreflect.FileDescriptor

var file_server_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x02, 0x0a, 0x06, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xea, 0x02, 0x0a, 0x0a,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8c, 0x01,
	0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x66, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x44, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x55,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x44, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x52,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x4f, 0x0a, 0x0f, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x56, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x24, 0x0a, 0x12,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x22, 0x43, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x16, 0x52, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x64, 0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x64, 0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x17, 0x52, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x59, 0x0a, 0x11, 0x52, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x12, 0x52,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x62, 0x78, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7b, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x46, 0x62, 0x78, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x53, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55,
	0x45, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x55, 0x45,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x0f, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x55, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x22, 0x84, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x2a, 0x0a, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x4c, 0x61, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x61, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x63, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x2b, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x45, 0x0a, 0x0b, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x68, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x16,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x47,
	0x0a, 0x17, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x6a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x80,
	0x05, 0x0a, 0x0c, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x12, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x6e, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x1f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x71, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x21, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x6b, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x6b,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x09, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x3a, 0x0a, 0x18, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x49, 0x0a,
	0x19, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x27, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6f,
	0x74, 0x22, 0x64, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5c, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x61, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x56, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x8b, 0x01,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x73, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x73, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3a,
	0x0a, 0x18, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x49, 0x0a, 0x19, 0x44, 0x6f,
	0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x6c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x3c, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x40, 0x0a,
	0x0e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x80, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x68, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x67, 0x68, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x22, 0x4a, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x29, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x86,
	0x01, 0x0a, 0x15, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0xc8,
	0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x52, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4c, 0x0a, 0x18, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x42, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x47, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x4e, 0x0a, 0x1a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x4b, 0x0a, 0x1b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4c, 0x0a, 0x18,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x49, 0x0a, 0x19, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x74, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x57, 0x0a, 0x13, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x22, 0x4a, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x73,
	0x22, 0x45, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x6b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x6f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x5e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x45, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb8, 0x02, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x2a, 0x69, 0x0a, 0x06, 0x55, 0x45, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x6b, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x56, 0x52, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x52, 0x10, 0x05, 0x2a, 0x5f, 0x0a,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x61, 0x72, 0x73, 0x65, 0x10, 0x03, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x10, 0x04, 0x2a, 0x9e,
	0x02, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x10, 0x00, 0x12, 0x19,
	0x0a, 0x15, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a,
	0x14, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x5f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x10, 0x05, 0x12, 0x19,
	0x0a, 0x15, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x5f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x07,
	0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x10, 0x08, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x10, 0x09, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x0a, 0x32,
	0xaa, 0x0c, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x42, 0x12, 0x37, 0x0a, 0x0a,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x46, 0x62, 0x78, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x62, 0x78, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x62, 0x78, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x45, 0x12, 0x0f, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x45, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x17, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x77,
	0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x6b,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1d, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11,
	0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x19, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x44,
	0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x12, 0x0a, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x0a, 0x2e,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x4c, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74,
	0x12, 0x17, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x70, 0x70, 0x12, 0x19,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x41, 0x64, 0x64, 0x72, 0x12, 0x13, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xd0, 0x0a, 0x0a,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x74, 0x74, 0x70, 0x12, 0x5e, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x76, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x4b, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x52, 0x12, 0x0f,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x32, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x56, 0x52, 0x3a, 0x01, 0x2a,
	0x12, 0x5b, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x12,
	0x13, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x68, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x65,
	0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x67, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x6c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x6a, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x17, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6f, 0x75, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0x7a, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x76, 0x32,
	0x2f, 0x77, 0x65, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a,
	0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x70, 0x70, 0x12, 0x19, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x5b, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x13, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x41, 0x64,
	0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x61, 0x0a,
	0x0d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x15,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x6e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x65, 0x62,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0x5d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x14, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x42,
	0x17, 0x5a, 0x15, 0x2e, 0x2e, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_rawDescOnce sync.Once
	file_server_proto_rawDescData = file_server_proto_rawDesc
)

func file_server_proto_rawDescGZIP() []byte {
	file_server_proto_rawDescOnce.Do(func() {
		file_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_rawDescData)
	})
	return file_server_proto_rawDescData
}

var file_server_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_server_proto_msgTypes = make([]protoimpl.MessageInfo, 78)
var file_server_proto_goTypes = []interface{}{
	(UEType)(0),                            // 0: UEType
	(ServerType)(0),                        // 1: ServerType
	(Method)(0),                            // 2: Method
	(*Server)(nil),                         // 3: Server
	(*ServerInfo)(nil),                     // 4: ServerInfo
	(*ServerListRequest)(nil),              // 5: ServerListRequest
	(*ServerListResponse)(nil),             // 6: ServerListResponse
	(*GetServerListRequest)(nil),           // 7: GetServerListRequest
	(*GetServerListResponse)(nil),          // 8: GetServerListResponse
	(*UpdateServerRequest)(nil),            // 9: UpdateServerRequest
	(*UpdateServerResponse)(nil),           // 10: UpdateServerResponse
	(*GetServerAddrRequest)(nil),           // 11: GetServerAddrRequest
	(*GetServerAddrResponse)(nil),          // 12: GetServerAddrResponse
	(*StartVRRequest)(nil),                 // 13: StartVRRequest
	(*StartVRResponse)(nil),                // 14: StartVRResponse
	(*StartPlanetRequest)(nil),             // 15: StartPlanetRequest
	(*StartPlanetResponse)(nil),            // 16: StartPlanetResponse
	(*ReStartStreamVRRequest)(nil),         // 17: ReStartStreamVRRequest
	(*ReStartStreamVRResponse)(nil),        // 18: ReStartStreamVRResponse
	(*ReStartAppRequest)(nil),              // 19: ReStartAppRequest
	(*ReStartAppResponse)(nil),             // 20: ReStartAppResponse
	(*GetFbxUploadUrlRequest)(nil),         // 21: GetFbxUploadUrlRequest
	(*GetFbxUploadUrlResponse)(nil),        // 22: GetFbxUploadUrlResponse
	(*StartUERequest)(nil),                 // 23: StartUERequest
	(*StartUEResponse)(nil),                // 24: StartUEResponse
	(*File)(nil),                           // 25: File
	(*GetUpdateFilesRequest)(nil),          // 26: GetUpdateFilesRequest
	(*GetUpdateFilesResponse)(nil),         // 27: GetUpdateFilesResponse
	(*GetVersionListRequest)(nil),          // 28: GetVersionListRequest
	(*VersionFile)(nil),                    // 29: VersionFile
	(*GetVersionListResponse)(nil),         // 30: GetVersionListResponse
	(*VersionDownLoadRequest)(nil),         // 31: VersionDownLoadRequest
	(*VersionDownLoadResponse)(nil),        // 32: VersionDownLoadResponse
	(*Version)(nil),                        // 33: Version
	(*GetVersionInfoRequest)(nil),          // 34: GetVersionInfoRequest
	(*GetVersionInfoResponse)(nil),         // 35: GetVersionInfoResponse
	(*RenderServer)(nil),                   // 36: RenderServer
	(*GetRenderServerInfoRequest)(nil),     // 37: GetRenderServerInfoRequest
	(*GetRenderServerInfoResponse)(nil),    // 38: GetRenderServerInfoResponse
	(*UpdateRenderServerInfoRequest)(nil),  // 39: UpdateRenderServerInfoRequest
	(*UpdateRenderServerInfoResponse)(nil), // 40: UpdateRenderServerInfoResponse
	(*CheckPakServerRestartRequest)(nil),   // 41: CheckPakServerRestartRequest
	(*CheckPakServerRestartResponse)(nil),  // 42: CheckPakServerRestartResponse
	(*ParseFile)(nil),                      // 43: ParseFile
	(*PushParseFileListRequest)(nil),       // 44: PushParseFileListRequest
	(*PushParseFileListResponse)(nil),      // 45: PushParseFileListResponse
	(*GetLogFileRequest)(nil),              // 46: GetLogFileRequest
	(*GetLogFileResponse)(nil),             // 47: GetLogFileResponse
	(*LogFileInfo)(nil),                    // 48: LogFileInfo
	(*PathInfo)(nil),                       // 49: pathInfo
	(*GetLogFileListRequest)(nil),          // 50: GetLogFileListRequest
	(*GetLogFileListResponse)(nil),         // 51: GetLogFileListResponse
	(*DownLoadParseFileRequest)(nil),       // 52: DownLoadParseFileRequest
	(*DownLoadParseFileResponse)(nil),      // 53: DownLoadParseFileResponse
	(*GetInternalListRequest)(nil),         // 54: GetInternalListRequest
	(*GetInternalListResponse)(nil),        // 55: GetInternalListResponse
	(*ServerListItem)(nil),                 // 56: ServerListItem
	(*RenderRegister)(nil),                 // 57: RenderRegister
	(*ConsulInfo)(nil),                     // 58: ConsulInfo
	(*ProxyData)(nil),                      // 59: ProxyData
	(*RenderServerGroupInfo)(nil),          // 60: RenderServerGroupInfo
	(*GetRenderServerListRequest)(nil),     // 61: GetRenderServerListRequest
	(*GetRenderServerListResponse)(nil),    // 62: GetRenderServerListResponse
	(*RestartSyncServerRequest)(nil),       // 63: RestartSyncServerRequest
	(*RestartSyncServerResponse)(nil),      // 64: RestartSyncServerResponse
	(*ServerDeviceOutRequest)(nil),         // 65: ServerDeviceOutRequest
	(*ServerDeviceOutResponse)(nil),        // 66: ServerDeviceOutResponse
	(*ServersRestartSteamRequest)(nil),     // 67: ServersRestartSteamRequest
	(*ServersRestartSteamResponse)(nil),    // 68: ServersRestartSteamResponse
	(*ServersRestartAppRequest)(nil),       // 69: ServersRestartAppRequest
	(*ServersRestartAppResponse)(nil),      // 70: ServersRestartAppResponse
	(*ServersAddrRequest)(nil),             // 71: ServersAddrRequest
	(*ServersAddrResponse)(nil),            // 72: ServersAddrResponse
	(*RestartServerRequest)(nil),           // 73: RestartServerRequest
	(*RestartServerResponse)(nil),          // 74: RestartServerResponse
	(*GetServerUpdateFilesRequest)(nil),    // 75: GetServerUpdateFilesRequest
	(*GetServerUpdateFilesResponse)(nil),   // 76: GetServerUpdateFilesResponse
	(*ServerFile)(nil),                     // 77: ServerFile
	(*UpdateVersionRequest)(nil),           // 78: UpdateVersionRequest
	(*UpdateVersionResponse)(nil),          // 79: UpdateVersionResponse
	(*RegisterServerInfo)(nil),             // 80: RegisterServerInfo
	(*structpb.Struct)(nil),                // 81: google.protobuf.Struct
}
var file_server_proto_depIdxs = []int32{
	3,  // 0: ServerListResponse.list:type_name -> Server
	81, // 1: ServerListResponse.data:type_name -> google.protobuf.Struct
	4,  // 2: GetServerListResponse.list:type_name -> ServerInfo
	0,  // 3: StartUERequest.startType:type_name -> UEType
	25, // 4: GetUpdateFilesResponse.files:type_name -> File
	29, // 5: GetVersionListResponse.list:type_name -> VersionFile
	33, // 6: GetVersionInfoResponse.version:type_name -> Version
	36, // 7: GetRenderServerInfoResponse.info:type_name -> RenderServer
	36, // 8: UpdateRenderServerInfoResponse.info:type_name -> RenderServer
	43, // 9: PushParseFileListRequest.list:type_name -> ParseFile
	48, // 10: GetLogFileResponse.list:type_name -> LogFileInfo
	49, // 11: LogFileInfo.pathList:type_name -> pathInfo
	48, // 12: GetLogFileListResponse.List:type_name -> LogFileInfo
	43, // 13: DownLoadParseFileRequest.file:type_name -> ParseFile
	56, // 14: GetInternalListResponse.list:type_name -> ServerListItem
	2,  // 15: ProxyData.messageType:type_name -> Method
	36, // 16: RenderServerGroupInfo.list:type_name -> RenderServer
	60, // 17: GetRenderServerListResponse.list:type_name -> RenderServerGroupInfo
	36, // 18: GetRenderServerListResponse.deviceOnLineList:type_name -> RenderServer
	77, // 19: GetServerUpdateFilesResponse.files:type_name -> ServerFile
	5,  // 20: ServerDB.ServerList:input_type -> ServerListRequest
	61, // 21: ServerDB.GetRenderServerList:input_type -> GetRenderServerListRequest
	37, // 22: ServerDB.GetRenderServerInfo:input_type -> GetRenderServerInfoRequest
	39, // 23: ServerDB.UpdateRenderServerInfo:input_type -> UpdateRenderServerInfoRequest
	21, // 24: ServerDB.GetFbxUploadUrl:input_type -> GetFbxUploadUrlRequest
	23, // 25: ServerDB.StartUE:input_type -> StartUERequest
	28, // 26: ServerDB.GetVersionList:input_type -> GetVersionListRequest
	31, // 27: ServerDB.VersionDownLoad:input_type -> VersionDownLoadRequest
	34, // 28: ServerDB.GetVersionInfo:input_type -> GetVersionInfoRequest
	41, // 29: ServerDB.CheckPakServerRestart:input_type -> CheckPakServerRestartRequest
	44, // 30: ServerDB.PushParseFileList:input_type -> PushParseFileListRequest
	52, // 31: ServerDB.DownLoadParseFile:input_type -> DownLoadParseFileRequest
	46, // 32: ServerDB.GetLogFile:input_type -> GetLogFileRequest
	59, // 33: ServerDB.StartProxy:input_type -> ProxyData
	63, // 34: ServerDB.RestartSyncServer:input_type -> RestartSyncServerRequest
	65, // 35: ServerDB.ServerDeviceOut:input_type -> ServerDeviceOutRequest
	67, // 36: ServerDB.ServersRestartSteam:input_type -> ServersRestartSteamRequest
	69, // 37: ServerDB.ServersRestartApp:input_type -> ServersRestartAppRequest
	71, // 38: ServerDB.ServersAddr:input_type -> ServersAddrRequest
	73, // 39: ServerDB.RestartServer:input_type -> RestartServerRequest
	26, // 40: ServerDB.GetUpdateFiles:input_type -> GetUpdateFilesRequest
	78, // 41: ServerDB.UpdateVersion:input_type -> UpdateVersionRequest
	7,  // 42: ServerHttp.GetServerList:input_type -> GetServerListRequest
	61, // 43: ServerHttp.GetRenderServerList:input_type -> GetRenderServerListRequest
	13, // 44: ServerHttp.StartVR:input_type -> StartVRRequest
	15, // 45: ServerHttp.StartPlanet:input_type -> StartPlanetRequest
	50, // 46: ServerHttp.GetLogFileList:input_type -> GetLogFileListRequest
	54, // 47: ServerHttp.GetInternalList:input_type -> GetInternalListRequest
	65, // 48: ServerHttp.ServerDeviceOut:input_type -> ServerDeviceOutRequest
	67, // 49: ServerHttp.ServersRestartSteam:input_type -> ServersRestartSteamRequest
	69, // 50: ServerHttp.ServersRestartApp:input_type -> ServersRestartAppRequest
	71, // 51: ServerHttp.ServersAddr:input_type -> ServersAddrRequest
	73, // 52: ServerHttp.RestartServer:input_type -> RestartServerRequest
	75, // 53: ServerHttp.GetUpdateFiles:input_type -> GetServerUpdateFilesRequest
	9,  // 54: ServerHttp.UpdateServer:input_type -> UpdateServerRequest
	6,  // 55: ServerDB.ServerList:output_type -> ServerListResponse
	62, // 56: ServerDB.GetRenderServerList:output_type -> GetRenderServerListResponse
	38, // 57: ServerDB.GetRenderServerInfo:output_type -> GetRenderServerInfoResponse
	40, // 58: ServerDB.UpdateRenderServerInfo:output_type -> UpdateRenderServerInfoResponse
	22, // 59: ServerDB.GetFbxUploadUrl:output_type -> GetFbxUploadUrlResponse
	24, // 60: ServerDB.StartUE:output_type -> StartUEResponse
	30, // 61: ServerDB.GetVersionList:output_type -> GetVersionListResponse
	32, // 62: ServerDB.VersionDownLoad:output_type -> VersionDownLoadResponse
	35, // 63: ServerDB.GetVersionInfo:output_type -> GetVersionInfoResponse
	42, // 64: ServerDB.CheckPakServerRestart:output_type -> CheckPakServerRestartResponse
	45, // 65: ServerDB.PushParseFileList:output_type -> PushParseFileListResponse
	53, // 66: ServerDB.DownLoadParseFile:output_type -> DownLoadParseFileResponse
	47, // 67: ServerDB.GetLogFile:output_type -> GetLogFileResponse
	59, // 68: ServerDB.StartProxy:output_type -> ProxyData
	64, // 69: ServerDB.RestartSyncServer:output_type -> RestartSyncServerResponse
	66, // 70: ServerDB.ServerDeviceOut:output_type -> ServerDeviceOutResponse
	68, // 71: ServerDB.ServersRestartSteam:output_type -> ServersRestartSteamResponse
	70, // 72: ServerDB.ServersRestartApp:output_type -> ServersRestartAppResponse
	72, // 73: ServerDB.ServersAddr:output_type -> ServersAddrResponse
	74, // 74: ServerDB.RestartServer:output_type -> RestartServerResponse
	27, // 75: ServerDB.GetUpdateFiles:output_type -> GetUpdateFilesResponse
	79, // 76: ServerDB.UpdateVersion:output_type -> UpdateVersionResponse
	8,  // 77: ServerHttp.GetServerList:output_type -> GetServerListResponse
	62, // 78: ServerHttp.GetRenderServerList:output_type -> GetRenderServerListResponse
	14, // 79: ServerHttp.StartVR:output_type -> StartVRResponse
	16, // 80: ServerHttp.StartPlanet:output_type -> StartPlanetResponse
	51, // 81: ServerHttp.GetLogFileList:output_type -> GetLogFileListResponse
	55, // 82: ServerHttp.GetInternalList:output_type -> GetInternalListResponse
	66, // 83: ServerHttp.ServerDeviceOut:output_type -> ServerDeviceOutResponse
	68, // 84: ServerHttp.ServersRestartSteam:output_type -> ServersRestartSteamResponse
	70, // 85: ServerHttp.ServersRestartApp:output_type -> ServersRestartAppResponse
	72, // 86: ServerHttp.ServersAddr:output_type -> ServersAddrResponse
	74, // 87: ServerHttp.RestartServer:output_type -> RestartServerResponse
	76, // 88: ServerHttp.GetUpdateFiles:output_type -> GetServerUpdateFilesResponse
	10, // 89: ServerHttp.UpdateServer:output_type -> UpdateServerResponse
	55, // [55:90] is the sub-list for method output_type
	20, // [20:55] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_server_proto_init() }
func file_server_proto_init() {
	if File_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAddrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerAddrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartVRRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartVRResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPlanetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPlanetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReStartStreamVRRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReStartStreamVRResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReStartAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReStartAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFbxUploadUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFbxUploadUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartUERequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartUEResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpdateFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpdateFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionDownLoadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionDownLoadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRenderServerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRenderServerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRenderServerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRenderServerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPakServerRestartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPakServerRestartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushParseFileListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushParseFileListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogFileListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogFileListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownLoadParseFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownLoadParseFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInternalListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInternalListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsulInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderServerGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRenderServerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRenderServerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartSyncServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartSyncServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDeviceOutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerDeviceOutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServersRestartSteamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServersRestartSteamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServersRestartAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServersRestartAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServersAddrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServersAddrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerUpdateFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerUpdateFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   78,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_server_proto_goTypes,
		DependencyIndexes: file_server_proto_depIdxs,
		EnumInfos:         file_server_proto_enumTypes,
		MessageInfos:      file_server_proto_msgTypes,
	}.Build()
	File_server_proto = out.File
	file_server_proto_rawDesc = nil
	file_server_proto_goTypes = nil
	file_server_proto_depIdxs = nil
}

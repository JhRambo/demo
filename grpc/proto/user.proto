// 协议类型
syntax = "proto3";

option go_package = "./user";

import "google/api/annotations.proto";

// 提供grpc内部通信的接口服务名
service UserDB {
  rpc AddUser(AddUserRequest) returns (AddUserResponse){}
}

message AddUserRequest {
  string name = 1;
}

message AddUserResponse {
  int32 code = 1;
  string message = 2;
  int32 userid = 3;
}

// 对外暴露的http协议的接口服务名 restful
service UserHttp {
  // 具体接口名称
  rpc Info (UserInfoRequest) returns (UserInfoResponse) {
    option (google.api.http) = {
      post: "/info"  //http协议调用时，用http://IP+PORT/info
      body: "*"
    };
  }
}

message UserInfoRequest {
   
}

message UserInfoResponse {
  string name = 1;
}

message CurUser {
  string username = 1;
  string uid = 2;
  string eid = 3;
  string token = 4;
}

enum MetaDataType {
  userinfo = 0;  //用户登录缓存的token信息
  testinfo = 1;   //test TODO
}

message TestData {
  string name = 1;
  MetaDataType type = 2;
}